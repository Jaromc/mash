

Terminals which are not used:

   MATRIX


State 385 contains 1 shift/reduce conflict.

Grammar
rule 1    variable_identifier -> IDENTIFIER
rule 2    primary_expression -> variable_identifier
rule 3    primary_expression -> INTCONSTANT
rule 4    primary_expression -> FLOATCONSTANT
rule 5    primary_expression -> BOOLCONSTANT
rule 6    primary_expression -> LEFT_PAREN expression RIGHT_PAREN
rule 7    postfix_expression -> primary_expression
rule 8    postfix_expression -> postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
rule 9    postfix_expression -> function_call
rule 10   postfix_expression -> postfix_expression DOT FIELD_SELECTION
rule 11   postfix_expression -> postfix_expression INC_OP
rule 12   postfix_expression -> postfix_expression DEC_OP
rule 13   integer_expression -> expression
rule 14   function_call -> function_call_or_method
rule 15   function_call_or_method -> function_call_generic
rule 16   function_call_or_method -> postfix_expression DOT function_call_generic
rule 17   function_call_generic -> function_call_header_with_parameters RIGHT_PAREN
rule 18   function_call_generic -> function_call_header_no_parameters RIGHT_PAREN
rule 19   function_call_header_no_parameters -> function_call_header VOID_TYPE
rule 20   function_call_header_no_parameters -> function_call_header
rule 21   function_call_header_with_parameters -> function_call_header assignment_expression
rule 22   function_call_header_with_parameters -> function_call_header_with_parameters COMMA assignment_expression
rule 23   function_call_header -> function_identifier LEFT_PAREN
rule 24   function_identifier -> type_specifier
rule 25   function_identifier -> IDENTIFIER
rule 26   function_identifier -> FIELD_SELECTION
rule 27   unary_expression -> postfix_expression
rule 28   unary_expression -> INC_OP unary_expression
rule 29   unary_expression -> DEC_OP unary_expression
rule 30   unary_expression -> unary_operator unary_expression
rule 31   unary_expression -> LEFT_PAREN type_specifier_nonarray RIGHT_PAREN unary_expression
rule 32   unary_operator -> PLUS
rule 33   unary_operator -> DASH
rule 34   unary_operator -> BANG
rule 35   unary_operator -> TILDE
rule 36   multiplicative_expression -> unary_expression
rule 37   multiplicative_expression -> multiplicative_expression STAR unary_expression
rule 38   multiplicative_expression -> multiplicative_expression SLASH unary_expression
rule 39   multiplicative_expression -> multiplicative_expression PERCENT unary_expression
rule 40   additive_expression -> multiplicative_expression
rule 41   additive_expression -> additive_expression PLUS multiplicative_expression
rule 42   additive_expression -> additive_expression DASH multiplicative_expression
rule 43   shift_expression -> additive_expression
rule 44   shift_expression -> shift_expression LEFT_OP additive_expression
rule 45   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 46   relational_expression -> shift_expression
rule 47   relational_expression -> relational_expression LEFT_ANGLE shift_expression
rule 48   relational_expression -> relational_expression RIGHT_ANGLE shift_expression
rule 49   relational_expression -> relational_expression LE_OP shift_expression
rule 50   relational_expression -> relational_expression GE_OP shift_expression
rule 51   equality_expression -> relational_expression
rule 52   equality_expression -> equality_expression EQ_OP relational_expression
rule 53   equality_expression -> equality_expression NE_OP relational_expression
rule 54   and_expression -> equality_expression
rule 55   and_expression -> and_expression AMPERSAND equality_expression
rule 56   exclusive_or_expression -> and_expression
rule 57   exclusive_or_expression -> exclusive_or_expression CARET and_expression
rule 58   inclusive_or_expression -> exclusive_or_expression
rule 59   inclusive_or_expression -> inclusive_or_expression VERTICAL_BAR exclusive_or_expression
rule 60   logical_and_expression -> inclusive_or_expression
rule 61   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 62   logical_xor_expression -> logical_and_expression
rule 63   logical_xor_expression -> logical_xor_expression XOR_OP logical_and_expression
rule 64   logical_or_expression -> logical_xor_expression
rule 65   logical_or_expression -> logical_or_expression OR_OP logical_xor_expression
rule 66   conditional_expression -> logical_or_expression
rule 67   conditional_expression -> logical_or_expression QUESTION expression COLON assignment_expression
rule 68   assignment_expression -> conditional_expression
rule 69   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 70   assignment_operator -> EQUAL
rule 71   assignment_operator -> MUL_ASSIGN
rule 72   assignment_operator -> DIV_ASSIGN
rule 73   assignment_operator -> MOD_ASSIGN
rule 74   assignment_operator -> ADD_ASSIGN
rule 75   assignment_operator -> SUB_ASSIGN
rule 76   assignment_operator -> LEFT_ASSIGN
rule 77   assignment_operator -> RIGHT_ASSIGN
rule 78   assignment_operator -> AND_ASSIGN
rule 79   assignment_operator -> XOR_ASSIGN
rule 80   assignment_operator -> OR_ASSIGN
rule 81   expression -> assignment_expression
rule 82   expression -> expression COMMA assignment_expression
rule 83   constant_expression -> conditional_expression
rule 84   declaration -> function_prototype SEMICOLON
rule 85   declaration -> init_declarator_list SEMICOLON
rule 86   function_prototype -> function_declarator RIGHT_PAREN
rule 87   function_prototype -> function_declarator RIGHT_PAREN COLON IDENTIFIER
rule 88   function_declarator -> function_header
rule 89   function_declarator -> function_header_with_parameters
rule 90   function_header_with_parameters -> function_header parameter_declaration
rule 91   function_header_with_parameters -> function_header_with_parameters COMMA parameter_declaration
rule 92   function_header -> fully_specified_type IDENTIFIER LEFT_PAREN
rule 93   parameter_declarator -> type_specifier IDENTIFIER
rule 94   parameter_declarator -> type_specifier IDENTIFIER EQUAL initializer
rule 95   parameter_declarator -> type_specifier IDENTIFIER COLON IDENTIFIER
rule 96   parameter_declarator -> type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 97   parameter_declarator -> type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER
rule 98   parameter_declaration -> type_qualifier parameter_qualifier parameter_declarator
rule 99   parameter_declaration -> parameter_qualifier parameter_declarator
rule 100  parameter_declaration -> type_qualifier parameter_qualifier parameter_type_specifier
rule 101  parameter_declaration -> parameter_qualifier parameter_type_specifier
rule 102  parameter_qualifier ->		/* empty */
rule 103  parameter_qualifier -> IN_QUAL
rule 104  parameter_qualifier -> OUT_QUAL
rule 105  parameter_qualifier -> INOUT_QUAL
rule 106  parameter_type_specifier -> type_specifier
rule 107  init_declarator_list -> single_declaration
rule 108  init_declarator_list -> init_declarator_list COMMA IDENTIFIER type_info
rule 109  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info
rule 110  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info
rule 111  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer
rule 112  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer
rule 113  init_declarator_list -> init_declarator_list COMMA IDENTIFIER type_info EQUAL initializer
rule 114  single_declaration -> fully_specified_type
rule 115  single_declaration -> fully_specified_type IDENTIFIER type_info
rule 116  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info
rule 117  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info
rule 118  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer
rule 119  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer
rule 120  single_declaration -> fully_specified_type IDENTIFIER type_info EQUAL initializer
rule 121  fully_specified_type -> type_specifier
rule 122  fully_specified_type -> type_qualifier type_specifier
rule 123  type_qualifier -> CONST_QUAL
rule 124  type_qualifier -> ATTRIBUTE
rule 125  type_qualifier -> VARYING
rule 126  type_qualifier -> UNIFORM
rule 127  type_specifier -> type_specifier_nonarray
rule 128  type_specifier -> type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 129  type_specifier_nonarray -> VOID_TYPE
rule 130  type_specifier_nonarray -> FLOAT_TYPE
rule 131  type_specifier_nonarray -> INT_TYPE
rule 132  type_specifier_nonarray -> BOOL_TYPE
rule 133  type_specifier_nonarray -> VECTOR LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE
rule 134  type_specifier_nonarray -> VECTOR LEFT_ANGLE INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE
rule 135  type_specifier_nonarray -> VECTOR LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE
rule 136  type_specifier_nonarray -> VEC2
rule 137  type_specifier_nonarray -> VEC3
rule 138  type_specifier_nonarray -> VEC4
rule 139  type_specifier_nonarray -> BVEC2
rule 140  type_specifier_nonarray -> BVEC3
rule 141  type_specifier_nonarray -> BVEC4
rule 142  type_specifier_nonarray -> IVEC2
rule 143  type_specifier_nonarray -> IVEC3
rule 144  type_specifier_nonarray -> IVEC4
rule 145  type_specifier_nonarray -> MATRIX2
rule 146  type_specifier_nonarray -> MATRIX3
rule 147  type_specifier_nonarray -> MATRIX4
rule 148  type_specifier_nonarray -> TEXTURE
rule 149  type_specifier_nonarray -> SAMPLERGENERIC
rule 150  type_specifier_nonarray -> SAMPLER1D
rule 151  type_specifier_nonarray -> SAMPLER2D
rule 152  type_specifier_nonarray -> SAMPLER3D
rule 153  type_specifier_nonarray -> SAMPLERCUBE
rule 154  type_specifier_nonarray -> SAMPLER1DSHADOW
rule 155  type_specifier_nonarray -> SAMPLER2DSHADOW
rule 156  type_specifier_nonarray -> struct_specifier
rule 157  type_specifier_nonarray -> TYPE_NAME
rule 158  struct_specifier -> STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 159  struct_specifier -> STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 160  struct_declaration_list -> struct_declaration
rule 161  struct_declaration_list -> struct_declaration_list struct_declaration
rule 162  struct_declaration -> type_specifier struct_declarator_list SEMICOLON
rule 163  struct_declarator_list -> struct_declarator
rule 164  struct_declarator_list -> struct_declarator_list COMMA struct_declarator
rule 165  struct_declarator -> IDENTIFIER
rule 166  struct_declarator -> IDENTIFIER COLON IDENTIFIER
rule 167  struct_declarator -> IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 168  struct_declarator -> IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER
rule 169  initializer -> assignment_expression
rule 170  initializer -> initialization_list
rule 171  initializer -> sampler_initializer
rule 172  declaration_statement -> declaration
rule 173  statement -> compound_statement
rule 174  statement -> simple_statement
rule 175  simple_statement -> declaration_statement
rule 176  simple_statement -> expression_statement
rule 177  simple_statement -> selection_statement
rule 178  simple_statement -> iteration_statement
rule 179  simple_statement -> jump_statement
rule 180  compound_statement -> LEFT_BRACE RIGHT_BRACE
rule 181  @1 ->		/* empty */
rule 182  @2 ->		/* empty */
rule 183  compound_statement -> LEFT_BRACE @1 statement_list @2 RIGHT_BRACE
rule 184  statement_no_new_scope -> compound_statement_no_new_scope
rule 185  statement_no_new_scope -> simple_statement
rule 186  compound_statement_no_new_scope -> LEFT_BRACE RIGHT_BRACE
rule 187  compound_statement_no_new_scope -> LEFT_BRACE statement_list RIGHT_BRACE
rule 188  statement_list -> statement
rule 189  statement_list -> statement_list statement
rule 190  expression_statement -> SEMICOLON
rule 191  expression_statement -> expression SEMICOLON
rule 192  selection_statement -> IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
rule 193  selection_rest_statement -> statement ELSE statement
rule 194  selection_rest_statement -> statement
rule 195  condition -> expression
rule 196  condition -> fully_specified_type IDENTIFIER EQUAL initializer
rule 197  @3 ->		/* empty */
rule 198  iteration_statement -> WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope
rule 199  @4 ->		/* empty */
rule 200  iteration_statement -> DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
rule 201  @5 ->		/* empty */
rule 202  iteration_statement -> FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
rule 203  for_init_statement -> expression_statement
rule 204  for_init_statement -> declaration_statement
rule 205  conditionopt -> condition
rule 206  conditionopt ->		/* empty */
rule 207  for_rest_statement -> conditionopt SEMICOLON
rule 208  for_rest_statement -> conditionopt SEMICOLON expression
rule 209  jump_statement -> CONTINUE SEMICOLON
rule 210  jump_statement -> BREAK SEMICOLON
rule 211  jump_statement -> RETURN SEMICOLON
rule 212  jump_statement -> RETURN expression SEMICOLON
rule 213  jump_statement -> DISCARD SEMICOLON
rule 214  translation_unit -> external_declaration
rule 215  translation_unit -> translation_unit external_declaration
rule 216  external_declaration -> function_definition
rule 217  external_declaration -> declaration
rule 218  external_declaration -> SEMICOLON
rule 219  @6 ->		/* empty */
rule 220  function_definition -> function_prototype @6 compound_statement_no_new_scope
rule 221  initialization_list -> LEFT_BRACE initializer_list RIGHT_BRACE
rule 222  initialization_list -> LEFT_BRACE initializer_list COMMA RIGHT_BRACE
rule 223  initializer_list -> assignment_expression
rule 224  initializer_list -> initialization_list
rule 225  initializer_list -> initializer_list COMMA assignment_expression
rule 226  initializer_list -> initializer_list COMMA initialization_list
rule 227  annotation -> LEFT_ANGLE RIGHT_ANGLE
rule 228  annotation -> LEFT_ANGLE annotation_list RIGHT_ANGLE
rule 229  annotation_list -> annotation_item
rule 230  annotation_list -> annotation_list annotation_item
rule 231  annotation_item -> ann_type IDENTIFIER EQUAL ann_literal SEMICOLON
rule 232  ann_type -> FLOAT_TYPE
rule 233  ann_type -> INT_TYPE
rule 234  ann_type -> BOOL_TYPE
rule 235  ann_type -> STRING_TYPE
rule 236  ann_type -> BVEC2
rule 237  ann_type -> BVEC3
rule 238  ann_type -> BVEC4
rule 239  ann_type -> IVEC2
rule 240  ann_type -> IVEC3
rule 241  ann_type -> IVEC4
rule 242  ann_type -> VEC2
rule 243  ann_type -> VEC3
rule 244  ann_type -> VEC4
rule 245  ann_literal -> ann_numerical_constant
rule 246  ann_literal -> STRINGCONSTANT
rule 247  ann_literal -> ann_literal_constructor
rule 248  ann_literal -> ann_literal_init_list
rule 249  ann_numerical_constant -> INTCONSTANT
rule 250  ann_numerical_constant -> BOOLCONSTANT
rule 251  ann_numerical_constant -> FLOATCONSTANT
rule 252  ann_literal_constructor -> ann_type LEFT_PAREN ann_value_list RIGHT_PAREN
rule 253  ann_value_list -> ann_numerical_constant
rule 254  ann_value_list -> ann_value_list COMMA ann_numerical_constant
rule 255  ann_literal_init_list -> LEFT_BRACE ann_value_list RIGHT_BRACE
rule 256  register_specifier -> COLON REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN
rule 257  semantic -> COLON IDENTIFIER
rule 258  type_info ->		/* empty */
rule 259  type_info -> semantic
rule 260  type_info -> register_specifier
rule 261  type_info -> annotation
rule 262  type_info -> semantic annotation
rule 263  type_info -> semantic register_specifier
rule 264  type_info -> register_specifier annotation
rule 265  type_info -> semantic register_specifier annotation
rule 266  sampler_initializer -> SAMPLERSTATE LEFT_BRACE sampler_init_list RIGHT_BRACE
rule 267  sampler_initializer -> SAMPLERSTATE LEFT_BRACE RIGHT_BRACE
rule 268  sampler_init_list -> sampler_init_item
rule 269  sampler_init_list -> sampler_init_list sampler_init_item
rule 270  sampler_init_item -> IDENTIFIER EQUAL IDENTIFIER SEMICOLON
rule 271  sampler_init_item -> IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON
rule 272  sampler_init_item -> IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON
rule 273  sampler_init_item -> TEXTURE EQUAL IDENTIFIER SEMICOLON
rule 274  sampler_init_item -> TEXTURE EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON
rule 275  sampler_init_item -> TEXTURE EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON

Terminals, with rules where they appear

$ (-1)
error (256)
ATTRIBUTE (258) 124
CONST_QUAL (259) 123
BOOL_TYPE (260) 132 135 234
FLOAT_TYPE (261) 130 133 232
INT_TYPE (262) 131 134 233
STRING_TYPE (263) 235
BREAK (264) 210
CONTINUE (265) 209
DO (266) 200
ELSE (267) 193
FOR (268) 202
IF (269) 192
DISCARD (270) 213
RETURN (271) 211 212
BVEC2 (272) 139 236
BVEC3 (273) 140 237
BVEC4 (274) 141 238
IVEC2 (275) 142 239
IVEC3 (276) 143 240
IVEC4 (277) 144 241
VEC2 (278) 136 242
VEC3 (279) 137 243
VEC4 (280) 138 244
MATRIX2 (281) 145
MATRIX3 (282) 146
MATRIX4 (283) 147
IN_QUAL (284) 103
OUT_QUAL (285) 104
INOUT_QUAL (286) 105
UNIFORM (287) 126
VARYING (288) 125
STRUCT (289) 158 159
VOID_TYPE (290) 19 129
WHILE (291) 198 200
SAMPLER1D (292) 150
SAMPLER2D (293) 151
SAMPLER3D (294) 152
SAMPLERCUBE (295) 153
SAMPLER1DSHADOW (296) 154
SAMPLER2DSHADOW (297) 155
SAMPLERGENERIC (298) 149
VECTOR (299) 133 134 135
MATRIX (300)
REGISTER (301) 256
TEXTURE (302) 148 273 274 275
SAMPLERSTATE (303) 266 267
IDENTIFIER (304) 1 25 87 92 93 94 95 96 97 108 109 110 111 112 113
    115 116 117 118 119 120 158 165 166 167 168 196 231 256 257 270
    271 272 273 274 275
TYPE_NAME (305) 157
FLOATCONSTANT (306) 4 251
INTCONSTANT (307) 3 133 134 135 249
BOOLCONSTANT (308) 5 250
STRINGCONSTANT (309) 246
FIELD_SELECTION (310) 10 26
LEFT_OP (311) 44
RIGHT_OP (312) 45
INC_OP (313) 11 28
DEC_OP (314) 12 29
LE_OP (315) 49
GE_OP (316) 50
EQ_OP (317) 52
NE_OP (318) 53
AND_OP (319) 61
OR_OP (320) 65
XOR_OP (321) 63
MUL_ASSIGN (322) 71
DIV_ASSIGN (323) 72
ADD_ASSIGN (324) 74
MOD_ASSIGN (325) 73
LEFT_ASSIGN (326) 76
RIGHT_ASSIGN (327) 77
AND_ASSIGN (328) 78
XOR_ASSIGN (329) 79
OR_ASSIGN (330) 80
SUB_ASSIGN (331) 75
LEFT_PAREN (332) 6 23 31 92 192 198 200 202 252 256 272 275
RIGHT_PAREN (333) 6 17 18 31 86 87 192 198 200 202 252 256 272 275
LEFT_BRACKET (334) 8 96 97 109 110 111 112 116 117 118 119 128 167
    168
RIGHT_BRACKET (335) 8 96 97 109 110 111 112 116 117 118 119 128 167
    168
LEFT_BRACE (336) 158 159 180 183 186 187 221 222 255 266 267
RIGHT_BRACE (337) 158 159 180 183 186 187 221 222 255 266 267
DOT (338) 10 16
COMMA (339) 22 82 91 108 109 110 111 112 113 133 134 135 164 222 225
    226 254
COLON (340) 67 87 95 97 166 168 256 257
EQUAL (341) 70 94 111 112 113 118 119 120 196 231 270 271 272 273 274
    275
SEMICOLON (342) 84 85 162 190 191 200 207 208 209 210 211 212 213 218
    231 270 271 272 273 274 275
BANG (343) 34
DASH (344) 33 42
TILDE (345) 35
PLUS (346) 32 41
STAR (347) 37
SLASH (348) 38
PERCENT (349) 39
LEFT_ANGLE (350) 47 133 134 135 227 228 271 274
RIGHT_ANGLE (351) 48 133 134 135 227 228 271 274
VERTICAL_BAR (352) 59
CARET (353) 57
AMPERSAND (354) 55
QUESTION (355) 67

Nonterminals, with rules where they appear

variable_identifier (101)
    on left: 1, on right: 2
primary_expression (102)
    on left: 2 3 4 5 6, on right: 7
postfix_expression (103)
    on left: 7 8 9 10 11 12, on right: 8 10 11 12 16 27
integer_expression (104)
    on left: 13, on right: 8
function_call (105)
    on left: 14, on right: 9
function_call_or_method (106)
    on left: 15 16, on right: 14
function_call_generic (107)
    on left: 17 18, on right: 15 16
function_call_header_no_parameters (108)
    on left: 19 20, on right: 18
function_call_header_with_parameters (109)
    on left: 21 22, on right: 17 22
function_call_header (110)
    on left: 23, on right: 19 20 21
function_identifier (111)
    on left: 24 25 26, on right: 23
unary_expression (112)
    on left: 27 28 29 30 31, on right: 28 29 30 31 36 37 38 39 69
unary_operator (113)
    on left: 32 33 34 35, on right: 30
multiplicative_expression (114)
    on left: 36 37 38 39, on right: 37 38 39 40 41 42
additive_expression (115)
    on left: 40 41 42, on right: 41 42 43 44 45
shift_expression (116)
    on left: 43 44 45, on right: 44 45 46 47 48 49 50
relational_expression (117)
    on left: 46 47 48 49 50, on right: 47 48 49 50 51 52 53
equality_expression (118)
    on left: 51 52 53, on right: 52 53 54 55
and_expression (119)
    on left: 54 55, on right: 55 56 57
exclusive_or_expression (120)
    on left: 56 57, on right: 57 58 59
inclusive_or_expression (121)
    on left: 58 59, on right: 59 60 61
logical_and_expression (122)
    on left: 60 61, on right: 61 62 63
logical_xor_expression (123)
    on left: 62 63, on right: 63 64 65
logical_or_expression (124)
    on left: 64 65, on right: 65 66 67
conditional_expression (125)
    on left: 66 67, on right: 68 83
assignment_expression (126)
    on left: 68 69, on right: 21 22 67 69 81 82 169 223 225
assignment_operator (127)
    on left: 70 71 72 73 74 75 76 77 78 79 80, on right: 69
expression (128)
    on left: 81 82, on right: 6 13 67 82 191 192 195 200 208 212
constant_expression (129)
    on left: 83, on right: 96 97 110 112 117 119 128 167 168
declaration (130)
    on left: 84 85, on right: 172 217
function_prototype (131)
    on left: 86 87, on right: 84 220
function_declarator (132)
    on left: 88 89, on right: 86 87
function_header_with_parameters (133)
    on left: 90 91, on right: 89 91
function_header (134)
    on left: 92, on right: 88 90
parameter_declarator (135)
    on left: 93 94 95 96 97, on right: 98 99
parameter_declaration (136)
    on left: 98 99 100 101, on right: 90 91
parameter_qualifier (137)
    on left: 102 103 104 105, on right: 98 99 100 101
parameter_type_specifier (138)
    on left: 106, on right: 100 101
init_declarator_list (139)
    on left: 107 108 109 110 111 112 113, on right: 85 108 109 110
    111 112 113
single_declaration (140)
    on left: 114 115 116 117 118 119 120, on right: 107
fully_specified_type (141)
    on left: 121 122, on right: 92 114 115 116 117 118 119 120 196
type_qualifier (142)
    on left: 123 124 125 126, on right: 98 100 122
type_specifier (143)
    on left: 127 128, on right: 24 93 94 95 96 97 106 121 122 162
type_specifier_nonarray (144)
    on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142
    143 144 145 146 147 148 149 150 151 152 153 154 155 156 157,
    on right: 31 127 128
struct_specifier (145)
    on left: 158 159, on right: 156
struct_declaration_list (146)
    on left: 160 161, on right: 158 159 161
struct_declaration (147)
    on left: 162, on right: 160 161
struct_declarator_list (148)
    on left: 163 164, on right: 162 164
struct_declarator (149)
    on left: 165 166 167 168, on right: 163 164
initializer (150)
    on left: 169 170 171, on right: 94 111 112 113 118 119 120 196
declaration_statement (151)
    on left: 172, on right: 175 204
statement (152)
    on left: 173 174, on right: 188 189 193 194 200
simple_statement (153)
    on left: 175 176 177 178 179, on right: 174 185
compound_statement (154)
    on left: 180 183, on right: 173
@1 (155)
    on left: 181, on right: 183
@2 (156)
    on left: 182, on right: 183
statement_no_new_scope (157)
    on left: 184 185, on right: 198 202
compound_statement_no_new_scope (158)
    on left: 186 187, on right: 184 220
statement_list (159)
    on left: 188 189, on right: 183 187 189
expression_statement (160)
    on left: 190 191, on right: 176 203
selection_statement (161)
    on left: 192, on right: 177
selection_rest_statement (162)
    on left: 193 194, on right: 192
condition (163)
    on left: 195 196, on right: 198 205
iteration_statement (164)
    on left: 198 200 202, on right: 178
@3 (165)
    on left: 197, on right: 198
@4 (166)
    on left: 199, on right: 200
@5 (167)
    on left: 201, on right: 202
for_init_statement (168)
    on left: 203 204, on right: 202
conditionopt (169)
    on left: 205 206, on right: 207 208
for_rest_statement (170)
    on left: 207 208, on right: 202
jump_statement (171)
    on left: 209 210 211 212 213, on right: 179
translation_unit (172)
    on left: 214 215, on right: 215
external_declaration (173)
    on left: 216 217 218, on right: 214 215
function_definition (174)
    on left: 220, on right: 216
@6 (175)
    on left: 219, on right: 220
initialization_list (176)
    on left: 221 222, on right: 170 224 226
initializer_list (177)
    on left: 223 224 225 226, on right: 221 222 225 226
annotation (178)
    on left: 227 228, on right: 261 262 264 265
annotation_list (179)
    on left: 229 230, on right: 228 230
annotation_item (180)
    on left: 231, on right: 229 230
ann_type (181)
    on left: 232 233 234 235 236 237 238 239 240 241 242 243 244,
    on right: 231 252
ann_literal (182)
    on left: 245 246 247 248, on right: 231
ann_numerical_constant (183)
    on left: 249 250 251, on right: 245 253 254
ann_literal_constructor (184)
    on left: 252, on right: 247
ann_value_list (185)
    on left: 253 254, on right: 252 254 255
ann_literal_init_list (186)
    on left: 255, on right: 248
register_specifier (187)
    on left: 256, on right: 260 263 264 265
semantic (188)
    on left: 257, on right: 259 262 263 265
type_info (189)
    on left: 258 259 260 261 262 263 264 265, on right: 108 109 110
    111 112 113 115 116 117 118 119 120
sampler_initializer (190)
    on left: 266 267, on right: 171
sampler_init_list (191)
    on left: 268 269, on right: 266 269
sampler_init_item (192)
    on left: 270 271 272 273 274 275, on right: 268 269


state 0

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31
    SEMICOLON	shift, and go to state 32

    declaration	go to state 33
    function_prototype	go to state 34
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 42
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    translation_unit	go to state 45
    external_declaration	go to state 46
    function_definition	go to state 47



state 1

    type_qualifier  ->  ATTRIBUTE .   (rule 124)

    $default	reduce using rule 124 (type_qualifier)



state 2

    type_qualifier  ->  CONST_QUAL .   (rule 123)

    $default	reduce using rule 123 (type_qualifier)



state 3

    type_specifier_nonarray  ->  BOOL_TYPE .   (rule 132)

    $default	reduce using rule 132 (type_specifier_nonarray)



state 4

    type_specifier_nonarray  ->  FLOAT_TYPE .   (rule 130)

    $default	reduce using rule 130 (type_specifier_nonarray)



state 5

    type_specifier_nonarray  ->  INT_TYPE .   (rule 131)

    $default	reduce using rule 131 (type_specifier_nonarray)



state 6

    type_specifier_nonarray  ->  BVEC2 .   (rule 139)

    $default	reduce using rule 139 (type_specifier_nonarray)



state 7

    type_specifier_nonarray  ->  BVEC3 .   (rule 140)

    $default	reduce using rule 140 (type_specifier_nonarray)



state 8

    type_specifier_nonarray  ->  BVEC4 .   (rule 141)

    $default	reduce using rule 141 (type_specifier_nonarray)



state 9

    type_specifier_nonarray  ->  IVEC2 .   (rule 142)

    $default	reduce using rule 142 (type_specifier_nonarray)



state 10

    type_specifier_nonarray  ->  IVEC3 .   (rule 143)

    $default	reduce using rule 143 (type_specifier_nonarray)



state 11

    type_specifier_nonarray  ->  IVEC4 .   (rule 144)

    $default	reduce using rule 144 (type_specifier_nonarray)



state 12

    type_specifier_nonarray  ->  VEC2 .   (rule 136)

    $default	reduce using rule 136 (type_specifier_nonarray)



state 13

    type_specifier_nonarray  ->  VEC3 .   (rule 137)

    $default	reduce using rule 137 (type_specifier_nonarray)



state 14

    type_specifier_nonarray  ->  VEC4 .   (rule 138)

    $default	reduce using rule 138 (type_specifier_nonarray)



state 15

    type_specifier_nonarray  ->  MATRIX2 .   (rule 145)

    $default	reduce using rule 145 (type_specifier_nonarray)



state 16

    type_specifier_nonarray  ->  MATRIX3 .   (rule 146)

    $default	reduce using rule 146 (type_specifier_nonarray)



state 17

    type_specifier_nonarray  ->  MATRIX4 .   (rule 147)

    $default	reduce using rule 147 (type_specifier_nonarray)



state 18

    type_qualifier  ->  UNIFORM .   (rule 126)

    $default	reduce using rule 126 (type_qualifier)



state 19

    type_qualifier  ->  VARYING .   (rule 125)

    $default	reduce using rule 125 (type_qualifier)



state 20

    struct_specifier  ->  STRUCT . IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 158)
    struct_specifier  ->  STRUCT . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 159)

    IDENTIFIER	shift, and go to state 48
    LEFT_BRACE	shift, and go to state 49



state 21

    type_specifier_nonarray  ->  VOID_TYPE .   (rule 129)

    $default	reduce using rule 129 (type_specifier_nonarray)



state 22

    type_specifier_nonarray  ->  SAMPLER1D .   (rule 150)

    $default	reduce using rule 150 (type_specifier_nonarray)



state 23

    type_specifier_nonarray  ->  SAMPLER2D .   (rule 151)

    $default	reduce using rule 151 (type_specifier_nonarray)



state 24

    type_specifier_nonarray  ->  SAMPLER3D .   (rule 152)

    $default	reduce using rule 152 (type_specifier_nonarray)



state 25

    type_specifier_nonarray  ->  SAMPLERCUBE .   (rule 153)

    $default	reduce using rule 153 (type_specifier_nonarray)



state 26

    type_specifier_nonarray  ->  SAMPLER1DSHADOW .   (rule 154)

    $default	reduce using rule 154 (type_specifier_nonarray)



state 27

    type_specifier_nonarray  ->  SAMPLER2DSHADOW .   (rule 155)

    $default	reduce using rule 155 (type_specifier_nonarray)



state 28

    type_specifier_nonarray  ->  SAMPLERGENERIC .   (rule 149)

    $default	reduce using rule 149 (type_specifier_nonarray)



state 29

    type_specifier_nonarray  ->  VECTOR . LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 133)
    type_specifier_nonarray  ->  VECTOR . LEFT_ANGLE INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 134)
    type_specifier_nonarray  ->  VECTOR . LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 135)

    LEFT_ANGLE	shift, and go to state 50



state 30

    type_specifier_nonarray  ->  TEXTURE .   (rule 148)

    $default	reduce using rule 148 (type_specifier_nonarray)



state 31

    type_specifier_nonarray  ->  TYPE_NAME .   (rule 157)

    $default	reduce using rule 157 (type_specifier_nonarray)



state 32

    external_declaration  ->  SEMICOLON .   (rule 218)

    $default	reduce using rule 218 (external_declaration)



state 33

    external_declaration  ->  declaration .   (rule 217)

    $default	reduce using rule 217 (external_declaration)



state 34

    declaration  ->  function_prototype . SEMICOLON   (rule 84)
    function_definition  ->  function_prototype . @6 compound_statement_no_new_scope   (rule 220)

    SEMICOLON	shift, and go to state 51

    $default	reduce using rule 219 (@6)

    @6  	go to state 52



state 35

    function_prototype  ->  function_declarator . RIGHT_PAREN   (rule 86)
    function_prototype  ->  function_declarator . RIGHT_PAREN COLON IDENTIFIER   (rule 87)

    RIGHT_PAREN	shift, and go to state 53



state 36

    function_declarator  ->  function_header_with_parameters .   (rule 89)
    function_header_with_parameters  ->  function_header_with_parameters . COMMA parameter_declaration   (rule 91)

    COMMA	shift, and go to state 54

    $default	reduce using rule 89 (function_declarator)



state 37

    function_declarator  ->  function_header .   (rule 88)
    function_header_with_parameters  ->  function_header . parameter_declaration   (rule 90)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    IN_QUAL	shift, and go to state 55
    OUT_QUAL	shift, and go to state 56
    INOUT_QUAL	shift, and go to state 57
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19

    RIGHT_PAREN	reduce using rule 88 (function_declarator)
    $default	reduce using rule 102 (parameter_qualifier)

    parameter_declaration	go to state 58
    parameter_qualifier	go to state 59
    type_qualifier	go to state 60



state 38

    declaration  ->  init_declarator_list . SEMICOLON   (rule 85)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER type_info   (rule 108)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 111)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 112)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER type_info EQUAL initializer   (rule 113)

    COMMA	shift, and go to state 61
    SEMICOLON	shift, and go to state 62



state 39

    init_declarator_list  ->  single_declaration .   (rule 107)

    $default	reduce using rule 107 (init_declarator_list)



state 40

    function_header  ->  fully_specified_type . IDENTIFIER LEFT_PAREN   (rule 92)
    single_declaration  ->  fully_specified_type .   (rule 114)
    single_declaration  ->  fully_specified_type . IDENTIFIER type_info   (rule 115)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info   (rule 116)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 117)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 118)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 119)
    single_declaration  ->  fully_specified_type . IDENTIFIER type_info EQUAL initializer   (rule 120)

    IDENTIFIER	shift, and go to state 63

    $default	reduce using rule 114 (single_declaration)



state 41

    fully_specified_type  ->  type_qualifier . type_specifier   (rule 122)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31

    type_specifier	go to state 64
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 42

    fully_specified_type  ->  type_specifier .   (rule 121)

    $default	reduce using rule 121 (fully_specified_type)



state 43

    type_specifier  ->  type_specifier_nonarray .   (rule 127)
    type_specifier  ->  type_specifier_nonarray . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 128)

    LEFT_BRACKET	shift, and go to state 65

    $default	reduce using rule 127 (type_specifier)



state 44

    type_specifier_nonarray  ->  struct_specifier .   (rule 156)

    $default	reduce using rule 156 (type_specifier_nonarray)



state 45

    translation_unit  ->  translation_unit . external_declaration   (rule 215)

    $   	go to state 447
    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31
    SEMICOLON	shift, and go to state 32

    declaration	go to state 33
    function_prototype	go to state 34
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 42
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    external_declaration	go to state 66
    function_definition	go to state 47



state 46

    translation_unit  ->  external_declaration .   (rule 214)

    $default	reduce using rule 214 (translation_unit)



state 47

    external_declaration  ->  function_definition .   (rule 216)

    $default	reduce using rule 216 (external_declaration)



state 48

    struct_specifier  ->  STRUCT IDENTIFIER . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 158)

    LEFT_BRACE	shift, and go to state 67



state 49

    struct_specifier  ->  STRUCT LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 159)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31

    type_specifier	go to state 68
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    struct_declaration_list	go to state 69
    struct_declaration	go to state 70



state 50

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE . FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 133)
    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE . INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 134)
    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE . BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 135)

    BOOL_TYPE	shift, and go to state 71
    FLOAT_TYPE	shift, and go to state 72
    INT_TYPE	shift, and go to state 73



state 51

    declaration  ->  function_prototype SEMICOLON .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 52

    function_definition  ->  function_prototype @6 . compound_statement_no_new_scope   (rule 220)

    LEFT_BRACE	shift, and go to state 74

    compound_statement_no_new_scope	go to state 75



state 53

    function_prototype  ->  function_declarator RIGHT_PAREN .   (rule 86)
    function_prototype  ->  function_declarator RIGHT_PAREN . COLON IDENTIFIER   (rule 87)

    COLON	shift, and go to state 76

    $default	reduce using rule 86 (function_prototype)



state 54

    function_header_with_parameters  ->  function_header_with_parameters COMMA . parameter_declaration   (rule 91)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    IN_QUAL	shift, and go to state 55
    OUT_QUAL	shift, and go to state 56
    INOUT_QUAL	shift, and go to state 57
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19

    $default	reduce using rule 102 (parameter_qualifier)

    parameter_declaration	go to state 77
    parameter_qualifier	go to state 59
    type_qualifier	go to state 60



state 55

    parameter_qualifier  ->  IN_QUAL .   (rule 103)

    $default	reduce using rule 103 (parameter_qualifier)



state 56

    parameter_qualifier  ->  OUT_QUAL .   (rule 104)

    $default	reduce using rule 104 (parameter_qualifier)



state 57

    parameter_qualifier  ->  INOUT_QUAL .   (rule 105)

    $default	reduce using rule 105 (parameter_qualifier)



state 58

    function_header_with_parameters  ->  function_header parameter_declaration .   (rule 90)

    $default	reduce using rule 90 (function_header_with_parameters)



state 59

    parameter_declaration  ->  parameter_qualifier . parameter_declarator   (rule 99)
    parameter_declaration  ->  parameter_qualifier . parameter_type_specifier   (rule 101)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31

    parameter_declarator	go to state 78
    parameter_type_specifier	go to state 79
    type_specifier	go to state 80
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 60

    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_declarator   (rule 98)
    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_type_specifier   (rule 100)

    IN_QUAL	shift, and go to state 55
    OUT_QUAL	shift, and go to state 56
    INOUT_QUAL	shift, and go to state 57

    $default	reduce using rule 102 (parameter_qualifier)

    parameter_qualifier	go to state 81



state 61

    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER type_info   (rule 108)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 112)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER type_info EQUAL initializer   (rule 113)

    IDENTIFIER	shift, and go to state 82



state 62

    declaration  ->  init_declarator_list SEMICOLON .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 63

    function_header  ->  fully_specified_type IDENTIFIER . LEFT_PAREN   (rule 92)
    single_declaration  ->  fully_specified_type IDENTIFIER . type_info   (rule 115)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info   (rule 116)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 118)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 119)
    single_declaration  ->  fully_specified_type IDENTIFIER . type_info EQUAL initializer   (rule 120)

    LEFT_PAREN	shift, and go to state 83
    LEFT_BRACKET	shift, and go to state 84
    COLON	shift, and go to state 85
    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 258 (type_info)

    annotation	go to state 87
    register_specifier	go to state 88
    semantic	go to state 89
    type_info	go to state 90



state 64

    fully_specified_type  ->  type_qualifier type_specifier .   (rule 122)

    $default	reduce using rule 122 (fully_specified_type)



state 65

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 128)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 126
    constant_expression	go to state 127
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 66

    translation_unit  ->  translation_unit external_declaration .   (rule 215)

    $default	reduce using rule 215 (translation_unit)



state 67

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 158)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31

    type_specifier	go to state 68
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    struct_declaration_list	go to state 129
    struct_declaration	go to state 70



state 68

    struct_declaration  ->  type_specifier . struct_declarator_list SEMICOLON   (rule 162)

    IDENTIFIER	shift, and go to state 130

    struct_declarator_list	go to state 131
    struct_declarator	go to state 132



state 69

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 159)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 161)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31
    RIGHT_BRACE	shift, and go to state 133

    type_specifier	go to state 68
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    struct_declaration	go to state 134



state 70

    struct_declaration_list  ->  struct_declaration .   (rule 160)

    $default	reduce using rule 160 (struct_declaration_list)



state 71

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE . COMMA INTCONSTANT RIGHT_ANGLE   (rule 135)

    COMMA	shift, and go to state 135



state 72

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE . COMMA INTCONSTANT RIGHT_ANGLE   (rule 133)

    COMMA	shift, and go to state 136



state 73

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE . COMMA INTCONSTANT RIGHT_ANGLE   (rule 134)

    COMMA	shift, and go to state 137



state 74

    compound_statement_no_new_scope  ->  LEFT_BRACE . RIGHT_BRACE   (rule 186)
    compound_statement_no_new_scope  ->  LEFT_BRACE . statement_list RIGHT_BRACE   (rule 187)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 146
    RIGHT_BRACE	shift, and go to state 147
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    statement	go to state 157
    simple_statement	go to state 158
    compound_statement	go to state 159
    statement_list	go to state 160
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 75

    function_definition  ->  function_prototype @6 compound_statement_no_new_scope .   (rule 220)

    $default	reduce using rule 220 (function_definition)



state 76

    function_prototype  ->  function_declarator RIGHT_PAREN COLON . IDENTIFIER   (rule 87)

    IDENTIFIER	shift, and go to state 165



state 77

    function_header_with_parameters  ->  function_header_with_parameters COMMA parameter_declaration .   (rule 91)

    $default	reduce using rule 91 (function_header_with_parameters)



state 78

    parameter_declaration  ->  parameter_qualifier parameter_declarator .   (rule 99)

    $default	reduce using rule 99 (parameter_declaration)



state 79

    parameter_declaration  ->  parameter_qualifier parameter_type_specifier .   (rule 101)

    $default	reduce using rule 101 (parameter_declaration)



state 80

    parameter_declarator  ->  type_specifier . IDENTIFIER   (rule 93)
    parameter_declarator  ->  type_specifier . IDENTIFIER EQUAL initializer   (rule 94)
    parameter_declarator  ->  type_specifier . IDENTIFIER COLON IDENTIFIER   (rule 95)
    parameter_declarator  ->  type_specifier . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 96)
    parameter_declarator  ->  type_specifier . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 97)
    parameter_type_specifier  ->  type_specifier .   (rule 106)

    IDENTIFIER	shift, and go to state 166

    $default	reduce using rule 106 (parameter_type_specifier)



state 81

    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_declarator   (rule 98)
    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_type_specifier   (rule 100)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31

    parameter_declarator	go to state 167
    parameter_type_specifier	go to state 168
    type_specifier	go to state 80
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 82

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . type_info   (rule 108)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 112)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . type_info EQUAL initializer   (rule 113)

    LEFT_BRACKET	shift, and go to state 169
    COLON	shift, and go to state 85
    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 258 (type_info)

    annotation	go to state 87
    register_specifier	go to state 88
    semantic	go to state 89
    type_info	go to state 170



state 83

    function_header  ->  fully_specified_type IDENTIFIER LEFT_PAREN .   (rule 92)

    $default	reduce using rule 92 (function_header)



state 84

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info   (rule 116)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info EQUAL initializer   (rule 118)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 119)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    RIGHT_BRACKET	shift, and go to state 171
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 126
    constant_expression	go to state 172
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 85

    register_specifier  ->  COLON . REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN   (rule 256)
    semantic  ->  COLON . IDENTIFIER   (rule 257)

    REGISTER	shift, and go to state 173
    IDENTIFIER	shift, and go to state 174



state 86

    annotation  ->  LEFT_ANGLE . RIGHT_ANGLE   (rule 227)
    annotation  ->  LEFT_ANGLE . annotation_list RIGHT_ANGLE   (rule 228)

    BOOL_TYPE	shift, and go to state 175
    FLOAT_TYPE	shift, and go to state 176
    INT_TYPE	shift, and go to state 177
    STRING_TYPE	shift, and go to state 178
    BVEC2	shift, and go to state 179
    BVEC3	shift, and go to state 180
    BVEC4	shift, and go to state 181
    IVEC2	shift, and go to state 182
    IVEC3	shift, and go to state 183
    IVEC4	shift, and go to state 184
    VEC2	shift, and go to state 185
    VEC3	shift, and go to state 186
    VEC4	shift, and go to state 187
    RIGHT_ANGLE	shift, and go to state 188

    annotation_list	go to state 189
    annotation_item	go to state 190
    ann_type	go to state 191



state 87

    type_info  ->  annotation .   (rule 261)

    $default	reduce using rule 261 (type_info)



state 88

    type_info  ->  register_specifier .   (rule 260)
    type_info  ->  register_specifier . annotation   (rule 264)

    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 260 (type_info)

    annotation	go to state 192



state 89

    type_info  ->  semantic .   (rule 259)
    type_info  ->  semantic . annotation   (rule 262)
    type_info  ->  semantic . register_specifier   (rule 263)
    type_info  ->  semantic . register_specifier annotation   (rule 265)

    COLON	shift, and go to state 193
    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 259 (type_info)

    annotation	go to state 194
    register_specifier	go to state 195



state 90

    single_declaration  ->  fully_specified_type IDENTIFIER type_info .   (rule 115)
    single_declaration  ->  fully_specified_type IDENTIFIER type_info . EQUAL initializer   (rule 120)

    EQUAL	shift, and go to state 196

    $default	reduce using rule 115 (single_declaration)



state 91

    variable_identifier  ->  IDENTIFIER .   (rule 1)
    function_identifier  ->  IDENTIFIER .   (rule 25)

    LEFT_PAREN	reduce using rule 25 (function_identifier)
    $default	reduce using rule 1 (variable_identifier)



state 92

    primary_expression  ->  FLOATCONSTANT .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 93

    primary_expression  ->  INTCONSTANT .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 94

    primary_expression  ->  BOOLCONSTANT .   (rule 5)

    $default	reduce using rule 5 (primary_expression)



state 95

    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    $default	reduce using rule 26 (function_identifier)



state 96

    unary_expression  ->  INC_OP . unary_expression   (rule 28)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 197
    unary_operator	go to state 114
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 97

    unary_expression  ->  DEC_OP . unary_expression   (rule 29)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 198
    unary_operator	go to state 114
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 98

    primary_expression  ->  LEFT_PAREN . expression RIGHT_PAREN   (rule 6)
    unary_expression  ->  LEFT_PAREN . type_specifier_nonarray RIGHT_PAREN unary_expression   (rule 31)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 199
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 200
    struct_specifier	go to state 44



state 99

    unary_operator  ->  BANG .   (rule 34)

    $default	reduce using rule 34 (unary_operator)



state 100

    unary_operator  ->  DASH .   (rule 33)

    $default	reduce using rule 33 (unary_operator)



state 101

    unary_operator  ->  TILDE .   (rule 35)

    $default	reduce using rule 35 (unary_operator)



state 102

    unary_operator  ->  PLUS .   (rule 32)

    $default	reduce using rule 32 (unary_operator)



state 103

    primary_expression  ->  variable_identifier .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 104

    postfix_expression  ->  primary_expression .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 105

    postfix_expression  ->  postfix_expression . LEFT_BRACKET integer_expression RIGHT_BRACKET   (rule 8)
    postfix_expression  ->  postfix_expression . DOT FIELD_SELECTION   (rule 10)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 11)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 12)
    function_call_or_method  ->  postfix_expression . DOT function_call_generic   (rule 16)
    unary_expression  ->  postfix_expression .   (rule 27)

    INC_OP	shift, and go to state 201
    DEC_OP	shift, and go to state 202
    LEFT_BRACKET	shift, and go to state 203
    DOT 	shift, and go to state 204

    $default	reduce using rule 27 (unary_expression)



state 106

    postfix_expression  ->  function_call .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 107

    function_call  ->  function_call_or_method .   (rule 14)

    $default	reduce using rule 14 (function_call)



state 108

    function_call_or_method  ->  function_call_generic .   (rule 15)

    $default	reduce using rule 15 (function_call_or_method)



state 109

    function_call_generic  ->  function_call_header_no_parameters . RIGHT_PAREN   (rule 18)

    RIGHT_PAREN	shift, and go to state 205



state 110

    function_call_generic  ->  function_call_header_with_parameters . RIGHT_PAREN   (rule 17)
    function_call_header_with_parameters  ->  function_call_header_with_parameters . COMMA assignment_expression   (rule 22)

    RIGHT_PAREN	shift, and go to state 206
    COMMA	shift, and go to state 207



state 111

    function_call_header_no_parameters  ->  function_call_header . VOID_TYPE   (rule 19)
    function_call_header_no_parameters  ->  function_call_header .   (rule 20)
    function_call_header_with_parameters  ->  function_call_header . assignment_expression   (rule 21)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 208
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    $default	reduce using rule 20 (function_call_header_no_parameters)

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 209
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 112

    function_call_header  ->  function_identifier . LEFT_PAREN   (rule 23)

    LEFT_PAREN	shift, and go to state 210



state 113

    multiplicative_expression  ->  unary_expression .   (rule 36)

    $default	reduce using rule 36 (multiplicative_expression)



state 114

    unary_expression  ->  unary_operator . unary_expression   (rule 30)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 211
    unary_operator	go to state 114
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 115

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 39)
    additive_expression  ->  multiplicative_expression .   (rule 40)

    STAR	shift, and go to state 212
    SLASH	shift, and go to state 213
    PERCENT	shift, and go to state 214

    $default	reduce using rule 40 (additive_expression)



state 116

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 42)
    shift_expression  ->  additive_expression .   (rule 43)

    DASH	shift, and go to state 215
    PLUS	shift, and go to state 216

    $default	reduce using rule 43 (shift_expression)



state 117

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 217
    RIGHT_OP	shift, and go to state 218

    $default	reduce using rule 46 (relational_expression)



state 118

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  relational_expression .   (rule 51)

    LE_OP	shift, and go to state 219
    GE_OP	shift, and go to state 220
    LEFT_ANGLE	shift, and go to state 221
    RIGHT_ANGLE	shift, and go to state 222

    $default	reduce using rule 51 (equality_expression)



state 119

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  equality_expression .   (rule 54)

    EQ_OP	shift, and go to state 223
    NE_OP	shift, and go to state 224

    $default	reduce using rule 54 (and_expression)



state 120

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 55)
    exclusive_or_expression  ->  and_expression .   (rule 56)

    AMPERSAND	shift, and go to state 225

    $default	reduce using rule 56 (exclusive_or_expression)



state 121

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 57)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 58)

    CARET	shift, and go to state 226

    $default	reduce using rule 58 (inclusive_or_expression)



state 122

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 59)
    logical_and_expression  ->  inclusive_or_expression .   (rule 60)

    VERTICAL_BAR	shift, and go to state 227

    $default	reduce using rule 60 (logical_and_expression)



state 123

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_xor_expression  ->  logical_and_expression .   (rule 62)

    AND_OP	shift, and go to state 228

    $default	reduce using rule 62 (logical_xor_expression)



state 124

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 63)
    logical_or_expression  ->  logical_xor_expression .   (rule 64)

    XOR_OP	shift, and go to state 229

    $default	reduce using rule 64 (logical_or_expression)



state 125

    logical_or_expression  ->  logical_or_expression . OR_OP logical_xor_expression   (rule 65)
    conditional_expression  ->  logical_or_expression .   (rule 66)
    conditional_expression  ->  logical_or_expression . QUESTION expression COLON assignment_expression   (rule 67)

    OR_OP	shift, and go to state 230
    QUESTION	shift, and go to state 231

    $default	reduce using rule 66 (conditional_expression)



state 126

    constant_expression  ->  conditional_expression .   (rule 83)

    $default	reduce using rule 83 (constant_expression)



state 127

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 128)

    RIGHT_BRACKET	shift, and go to state 232



state 128

    function_identifier  ->  type_specifier .   (rule 24)

    $default	reduce using rule 24 (function_identifier)



state 129

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 158)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 161)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    TYPE_NAME	shift, and go to state 31
    RIGHT_BRACE	shift, and go to state 233

    type_specifier	go to state 68
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    struct_declaration	go to state 134



state 130

    struct_declarator  ->  IDENTIFIER .   (rule 165)
    struct_declarator  ->  IDENTIFIER . COLON IDENTIFIER   (rule 166)
    struct_declarator  ->  IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 167)
    struct_declarator  ->  IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 168)

    LEFT_BRACKET	shift, and go to state 234
    COLON	shift, and go to state 235

    $default	reduce using rule 165 (struct_declarator)



state 131

    struct_declaration  ->  type_specifier struct_declarator_list . SEMICOLON   (rule 162)
    struct_declarator_list  ->  struct_declarator_list . COMMA struct_declarator   (rule 164)

    COMMA	shift, and go to state 236
    SEMICOLON	shift, and go to state 237



state 132

    struct_declarator_list  ->  struct_declarator .   (rule 163)

    $default	reduce using rule 163 (struct_declarator_list)



state 133

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 159)

    $default	reduce using rule 159 (struct_specifier)



state 134

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 161)

    $default	reduce using rule 161 (struct_declaration_list)



state 135

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE COMMA . INTCONSTANT RIGHT_ANGLE   (rule 135)

    INTCONSTANT	shift, and go to state 238



state 136

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE COMMA . INTCONSTANT RIGHT_ANGLE   (rule 133)

    INTCONSTANT	shift, and go to state 239



state 137

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE COMMA . INTCONSTANT RIGHT_ANGLE   (rule 134)

    INTCONSTANT	shift, and go to state 240



state 138

    jump_statement  ->  BREAK . SEMICOLON   (rule 210)

    SEMICOLON	shift, and go to state 241



state 139

    jump_statement  ->  CONTINUE . SEMICOLON   (rule 209)

    SEMICOLON	shift, and go to state 242



state 140

    iteration_statement  ->  DO . @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 200)

    $default	reduce using rule 199 (@4)

    @4  	go to state 243



state 141

    iteration_statement  ->  FOR . LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 202)

    LEFT_PAREN	shift, and go to state 244



state 142

    selection_statement  ->  IF . LEFT_PAREN expression RIGHT_PAREN selection_rest_statement   (rule 192)

    LEFT_PAREN	shift, and go to state 245



state 143

    jump_statement  ->  DISCARD . SEMICOLON   (rule 213)

    SEMICOLON	shift, and go to state 246



state 144

    jump_statement  ->  RETURN . SEMICOLON   (rule 211)
    jump_statement  ->  RETURN . expression SEMICOLON   (rule 212)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    SEMICOLON	shift, and go to state 247
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 248
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 145

    iteration_statement  ->  WHILE . LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope   (rule 198)

    LEFT_PAREN	shift, and go to state 249



state 146

    compound_statement  ->  LEFT_BRACE . RIGHT_BRACE   (rule 180)
    compound_statement  ->  LEFT_BRACE . @1 statement_list @2 RIGHT_BRACE   (rule 183)

    RIGHT_BRACE	shift, and go to state 250

    $default	reduce using rule 181 (@1)

    @1  	go to state 251



state 147

    compound_statement_no_new_scope  ->  LEFT_BRACE RIGHT_BRACE .   (rule 186)

    $default	reduce using rule 186 (compound_statement_no_new_scope)



state 148

    expression_statement  ->  SEMICOLON .   (rule 190)

    $default	reduce using rule 190 (expression_statement)



state 149

    multiplicative_expression  ->  unary_expression .   (rule 36)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 69)

    MUL_ASSIGN	shift, and go to state 252
    DIV_ASSIGN	shift, and go to state 253
    ADD_ASSIGN	shift, and go to state 254
    MOD_ASSIGN	shift, and go to state 255
    LEFT_ASSIGN	shift, and go to state 256
    RIGHT_ASSIGN	shift, and go to state 257
    AND_ASSIGN	shift, and go to state 258
    XOR_ASSIGN	shift, and go to state 259
    OR_ASSIGN	shift, and go to state 260
    SUB_ASSIGN	shift, and go to state 261
    EQUAL	shift, and go to state 262

    $default	reduce using rule 36 (multiplicative_expression)

    assignment_operator	go to state 263



state 150

    assignment_expression  ->  conditional_expression .   (rule 68)

    $default	reduce using rule 68 (assignment_expression)



state 151

    expression  ->  assignment_expression .   (rule 81)

    $default	reduce using rule 81 (expression)



state 152

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    expression_statement  ->  expression . SEMICOLON   (rule 191)

    COMMA	shift, and go to state 264
    SEMICOLON	shift, and go to state 265



state 153

    declaration_statement  ->  declaration .   (rule 172)

    $default	reduce using rule 172 (declaration_statement)



state 154

    declaration  ->  function_prototype . SEMICOLON   (rule 84)

    SEMICOLON	shift, and go to state 51



state 155

    function_identifier  ->  type_specifier .   (rule 24)
    fully_specified_type  ->  type_specifier .   (rule 121)

    LEFT_PAREN	reduce using rule 24 (function_identifier)
    $default	reduce using rule 121 (fully_specified_type)



state 156

    simple_statement  ->  declaration_statement .   (rule 175)

    $default	reduce using rule 175 (simple_statement)



state 157

    statement_list  ->  statement .   (rule 188)

    $default	reduce using rule 188 (statement_list)



state 158

    statement  ->  simple_statement .   (rule 174)

    $default	reduce using rule 174 (statement)



state 159

    statement  ->  compound_statement .   (rule 173)

    $default	reduce using rule 173 (statement)



state 160

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list . RIGHT_BRACE   (rule 187)
    statement_list  ->  statement_list . statement   (rule 189)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 146
    RIGHT_BRACE	shift, and go to state 266
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    statement	go to state 267
    simple_statement	go to state 158
    compound_statement	go to state 159
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 161

    simple_statement  ->  expression_statement .   (rule 176)

    $default	reduce using rule 176 (simple_statement)



state 162

    simple_statement  ->  selection_statement .   (rule 177)

    $default	reduce using rule 177 (simple_statement)



state 163

    simple_statement  ->  iteration_statement .   (rule 178)

    $default	reduce using rule 178 (simple_statement)



state 164

    simple_statement  ->  jump_statement .   (rule 179)

    $default	reduce using rule 179 (simple_statement)



state 165

    function_prototype  ->  function_declarator RIGHT_PAREN COLON IDENTIFIER .   (rule 87)

    $default	reduce using rule 87 (function_prototype)



state 166

    parameter_declarator  ->  type_specifier IDENTIFIER .   (rule 93)
    parameter_declarator  ->  type_specifier IDENTIFIER . EQUAL initializer   (rule 94)
    parameter_declarator  ->  type_specifier IDENTIFIER . COLON IDENTIFIER   (rule 95)
    parameter_declarator  ->  type_specifier IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 96)
    parameter_declarator  ->  type_specifier IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 97)

    LEFT_BRACKET	shift, and go to state 268
    COLON	shift, and go to state 269
    EQUAL	shift, and go to state 270

    $default	reduce using rule 93 (parameter_declarator)



state 167

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_declarator .   (rule 98)

    $default	reduce using rule 98 (parameter_declaration)



state 168

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_type_specifier .   (rule 100)

    $default	reduce using rule 100 (parameter_declaration)



state 169

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info EQUAL initializer   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 112)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    RIGHT_BRACKET	shift, and go to state 271
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 126
    constant_expression	go to state 272
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 170

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info .   (rule 108)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info . EQUAL initializer   (rule 113)

    EQUAL	shift, and go to state 273

    $default	reduce using rule 108 (init_declarator_list)



state 171

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info   (rule 116)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info EQUAL initializer   (rule 118)

    COLON	shift, and go to state 85
    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 258 (type_info)

    annotation	go to state 87
    register_specifier	go to state 88
    semantic	go to state 89
    type_info	go to state 274



state 172

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info EQUAL initializer   (rule 119)

    RIGHT_BRACKET	shift, and go to state 275



state 173

    register_specifier  ->  COLON REGISTER . LEFT_PAREN IDENTIFIER RIGHT_PAREN   (rule 256)

    LEFT_PAREN	shift, and go to state 276



state 174

    semantic  ->  COLON IDENTIFIER .   (rule 257)

    $default	reduce using rule 257 (semantic)



state 175

    ann_type  ->  BOOL_TYPE .   (rule 234)

    $default	reduce using rule 234 (ann_type)



state 176

    ann_type  ->  FLOAT_TYPE .   (rule 232)

    $default	reduce using rule 232 (ann_type)



state 177

    ann_type  ->  INT_TYPE .   (rule 233)

    $default	reduce using rule 233 (ann_type)



state 178

    ann_type  ->  STRING_TYPE .   (rule 235)

    $default	reduce using rule 235 (ann_type)



state 179

    ann_type  ->  BVEC2 .   (rule 236)

    $default	reduce using rule 236 (ann_type)



state 180

    ann_type  ->  BVEC3 .   (rule 237)

    $default	reduce using rule 237 (ann_type)



state 181

    ann_type  ->  BVEC4 .   (rule 238)

    $default	reduce using rule 238 (ann_type)



state 182

    ann_type  ->  IVEC2 .   (rule 239)

    $default	reduce using rule 239 (ann_type)



state 183

    ann_type  ->  IVEC3 .   (rule 240)

    $default	reduce using rule 240 (ann_type)



state 184

    ann_type  ->  IVEC4 .   (rule 241)

    $default	reduce using rule 241 (ann_type)



state 185

    ann_type  ->  VEC2 .   (rule 242)

    $default	reduce using rule 242 (ann_type)



state 186

    ann_type  ->  VEC3 .   (rule 243)

    $default	reduce using rule 243 (ann_type)



state 187

    ann_type  ->  VEC4 .   (rule 244)

    $default	reduce using rule 244 (ann_type)



state 188

    annotation  ->  LEFT_ANGLE RIGHT_ANGLE .   (rule 227)

    $default	reduce using rule 227 (annotation)



state 189

    annotation  ->  LEFT_ANGLE annotation_list . RIGHT_ANGLE   (rule 228)
    annotation_list  ->  annotation_list . annotation_item   (rule 230)

    BOOL_TYPE	shift, and go to state 175
    FLOAT_TYPE	shift, and go to state 176
    INT_TYPE	shift, and go to state 177
    STRING_TYPE	shift, and go to state 178
    BVEC2	shift, and go to state 179
    BVEC3	shift, and go to state 180
    BVEC4	shift, and go to state 181
    IVEC2	shift, and go to state 182
    IVEC3	shift, and go to state 183
    IVEC4	shift, and go to state 184
    VEC2	shift, and go to state 185
    VEC3	shift, and go to state 186
    VEC4	shift, and go to state 187
    RIGHT_ANGLE	shift, and go to state 277

    annotation_item	go to state 278
    ann_type	go to state 191



state 190

    annotation_list  ->  annotation_item .   (rule 229)

    $default	reduce using rule 229 (annotation_list)



state 191

    annotation_item  ->  ann_type . IDENTIFIER EQUAL ann_literal SEMICOLON   (rule 231)

    IDENTIFIER	shift, and go to state 279



state 192

    type_info  ->  register_specifier annotation .   (rule 264)

    $default	reduce using rule 264 (type_info)



state 193

    register_specifier  ->  COLON . REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN   (rule 256)

    REGISTER	shift, and go to state 173



state 194

    type_info  ->  semantic annotation .   (rule 262)

    $default	reduce using rule 262 (type_info)



state 195

    type_info  ->  semantic register_specifier .   (rule 263)
    type_info  ->  semantic register_specifier . annotation   (rule 265)

    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 263 (type_info)

    annotation	go to state 280



state 196

    single_declaration  ->  fully_specified_type IDENTIFIER type_info EQUAL . initializer   (rule 120)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 284
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 197

    unary_expression  ->  INC_OP unary_expression .   (rule 28)

    $default	reduce using rule 28 (unary_expression)



state 198

    unary_expression  ->  DEC_OP unary_expression .   (rule 29)

    $default	reduce using rule 29 (unary_expression)



state 199

    primary_expression  ->  LEFT_PAREN expression . RIGHT_PAREN   (rule 6)
    expression  ->  expression . COMMA assignment_expression   (rule 82)

    RIGHT_PAREN	shift, and go to state 287
    COMMA	shift, and go to state 264



state 200

    unary_expression  ->  LEFT_PAREN type_specifier_nonarray . RIGHT_PAREN unary_expression   (rule 31)
    type_specifier  ->  type_specifier_nonarray .   (rule 127)
    type_specifier  ->  type_specifier_nonarray . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 128)

    RIGHT_PAREN	shift, and go to state 288
    LEFT_BRACKET	shift, and go to state 65

    $default	reduce using rule 127 (type_specifier)



state 201

    postfix_expression  ->  postfix_expression INC_OP .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 202

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 203

    postfix_expression  ->  postfix_expression LEFT_BRACKET . integer_expression RIGHT_BRACKET   (rule 8)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    integer_expression	go to state 289
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 290
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 204

    postfix_expression  ->  postfix_expression DOT . FIELD_SELECTION   (rule 10)
    function_call_or_method  ->  postfix_expression DOT . function_call_generic   (rule 16)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 291
    TYPE_NAME	shift, and go to state 31
    FIELD_SELECTION	shift, and go to state 292

    function_call_generic	go to state 293
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 205

    function_call_generic  ->  function_call_header_no_parameters RIGHT_PAREN .   (rule 18)

    $default	reduce using rule 18 (function_call_generic)



state 206

    function_call_generic  ->  function_call_header_with_parameters RIGHT_PAREN .   (rule 17)

    $default	reduce using rule 17 (function_call_generic)



state 207

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA . assignment_expression   (rule 22)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 294
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 208

    function_call_header_no_parameters  ->  function_call_header VOID_TYPE .   (rule 19)
    type_specifier_nonarray  ->  VOID_TYPE .   (rule 129)

    RIGHT_PAREN	reduce using rule 19 (function_call_header_no_parameters)
    $default	reduce using rule 129 (type_specifier_nonarray)



state 209

    function_call_header_with_parameters  ->  function_call_header assignment_expression .   (rule 21)

    $default	reduce using rule 21 (function_call_header_with_parameters)



state 210

    function_call_header  ->  function_identifier LEFT_PAREN .   (rule 23)

    $default	reduce using rule 23 (function_call_header)



state 211

    unary_expression  ->  unary_operator unary_expression .   (rule 30)

    $default	reduce using rule 30 (unary_expression)



state 212

    multiplicative_expression  ->  multiplicative_expression STAR . unary_expression   (rule 37)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 295
    unary_operator	go to state 114
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 213

    multiplicative_expression  ->  multiplicative_expression SLASH . unary_expression   (rule 38)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 296
    unary_operator	go to state 114
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 214

    multiplicative_expression  ->  multiplicative_expression PERCENT . unary_expression   (rule 39)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 297
    unary_operator	go to state 114
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 215

    additive_expression  ->  additive_expression DASH . multiplicative_expression   (rule 42)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 298
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 216

    additive_expression  ->  additive_expression PLUS . multiplicative_expression   (rule 41)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 299
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 217

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 44)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 300
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 218

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 45)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 301
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 219

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 49)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 302
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 220

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 50)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 303
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 221

    relational_expression  ->  relational_expression LEFT_ANGLE . shift_expression   (rule 47)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 304
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 222

    relational_expression  ->  relational_expression RIGHT_ANGLE . shift_expression   (rule 48)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 305
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 223

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 52)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 306
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 224

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 53)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 307
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 225

    and_expression  ->  and_expression AMPERSAND . equality_expression   (rule 55)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 308
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 226

    exclusive_or_expression  ->  exclusive_or_expression CARET . and_expression   (rule 57)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 309
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 227

    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR . exclusive_or_expression   (rule 59)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 310
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 228

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 61)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 311
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 229

    logical_xor_expression  ->  logical_xor_expression XOR_OP . logical_and_expression   (rule 63)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 312
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 230

    logical_or_expression  ->  logical_or_expression OR_OP . logical_xor_expression   (rule 65)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 313
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 231

    conditional_expression  ->  logical_or_expression QUESTION . expression COLON assignment_expression   (rule 67)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 314
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 232

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 128)

    $default	reduce using rule 128 (type_specifier)



state 233

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 158)

    $default	reduce using rule 158 (struct_specifier)



state 234

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 167)
    struct_declarator  ->  IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 168)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 126
    constant_expression	go to state 315
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 235

    struct_declarator  ->  IDENTIFIER COLON . IDENTIFIER   (rule 166)

    IDENTIFIER	shift, and go to state 316



state 236

    struct_declarator_list  ->  struct_declarator_list COMMA . struct_declarator   (rule 164)

    IDENTIFIER	shift, and go to state 130

    struct_declarator	go to state 317



state 237

    struct_declaration  ->  type_specifier struct_declarator_list SEMICOLON .   (rule 162)

    $default	reduce using rule 162 (struct_declaration)



state 238

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT . RIGHT_ANGLE   (rule 135)

    RIGHT_ANGLE	shift, and go to state 318



state 239

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT . RIGHT_ANGLE   (rule 133)

    RIGHT_ANGLE	shift, and go to state 319



state 240

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE COMMA INTCONSTANT . RIGHT_ANGLE   (rule 134)

    RIGHT_ANGLE	shift, and go to state 320



state 241

    jump_statement  ->  BREAK SEMICOLON .   (rule 210)

    $default	reduce using rule 210 (jump_statement)



state 242

    jump_statement  ->  CONTINUE SEMICOLON .   (rule 209)

    $default	reduce using rule 209 (jump_statement)



state 243

    iteration_statement  ->  DO @4 . statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 200)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 146
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    statement	go to state 321
    simple_statement	go to state 158
    compound_statement	go to state 159
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 244

    iteration_statement  ->  FOR LEFT_PAREN . @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 202)

    $default	reduce using rule 201 (@5)

    @5  	go to state 322



state 245

    selection_statement  ->  IF LEFT_PAREN . expression RIGHT_PAREN selection_rest_statement   (rule 192)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 323
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 246

    jump_statement  ->  DISCARD SEMICOLON .   (rule 213)

    $default	reduce using rule 213 (jump_statement)



state 247

    jump_statement  ->  RETURN SEMICOLON .   (rule 211)

    $default	reduce using rule 211 (jump_statement)



state 248

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    jump_statement  ->  RETURN expression . SEMICOLON   (rule 212)

    COMMA	shift, and go to state 264
    SEMICOLON	shift, and go to state 324



state 249

    iteration_statement  ->  WHILE LEFT_PAREN . @3 condition RIGHT_PAREN statement_no_new_scope   (rule 198)

    $default	reduce using rule 197 (@3)

    @3  	go to state 325



state 250

    compound_statement  ->  LEFT_BRACE RIGHT_BRACE .   (rule 180)

    $default	reduce using rule 180 (compound_statement)



state 251

    compound_statement  ->  LEFT_BRACE @1 . statement_list @2 RIGHT_BRACE   (rule 183)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 146
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    statement	go to state 157
    simple_statement	go to state 158
    compound_statement	go to state 159
    statement_list	go to state 326
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 252

    assignment_operator  ->  MUL_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 253

    assignment_operator  ->  DIV_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 254

    assignment_operator  ->  ADD_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 255

    assignment_operator  ->  MOD_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 256

    assignment_operator  ->  LEFT_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 257

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 77)

    $default	reduce using rule 77 (assignment_operator)



state 258

    assignment_operator  ->  AND_ASSIGN .   (rule 78)

    $default	reduce using rule 78 (assignment_operator)



state 259

    assignment_operator  ->  XOR_ASSIGN .   (rule 79)

    $default	reduce using rule 79 (assignment_operator)



state 260

    assignment_operator  ->  OR_ASSIGN .   (rule 80)

    $default	reduce using rule 80 (assignment_operator)



state 261

    assignment_operator  ->  SUB_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 262

    assignment_operator  ->  EQUAL .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 263

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 69)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 327
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 264

    expression  ->  expression COMMA . assignment_expression   (rule 82)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 328
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 265

    expression_statement  ->  expression SEMICOLON .   (rule 191)

    $default	reduce using rule 191 (expression_statement)



state 266

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list RIGHT_BRACE .   (rule 187)

    $default	reduce using rule 187 (compound_statement_no_new_scope)



state 267

    statement_list  ->  statement_list statement .   (rule 189)

    $default	reduce using rule 189 (statement_list)



state 268

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 96)
    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 97)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 113
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 126
    constant_expression	go to state 329
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 269

    parameter_declarator  ->  type_specifier IDENTIFIER COLON . IDENTIFIER   (rule 95)

    IDENTIFIER	shift, and go to state 330



state 270

    parameter_declarator  ->  type_specifier IDENTIFIER EQUAL . initializer   (rule 94)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 331
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 271

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info EQUAL initializer   (rule 111)

    COLON	shift, and go to state 85
    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 258 (type_info)

    annotation	go to state 87
    register_specifier	go to state 88
    semantic	go to state 89
    type_info	go to state 332



state 272

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info EQUAL initializer   (rule 112)

    RIGHT_BRACKET	shift, and go to state 333



state 273

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info EQUAL . initializer   (rule 113)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 334
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 274

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info .   (rule 116)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info . EQUAL initializer   (rule 118)

    EQUAL	shift, and go to state 335

    $default	reduce using rule 116 (single_declaration)



state 275

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info EQUAL initializer   (rule 119)

    COLON	shift, and go to state 85
    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 258 (type_info)

    annotation	go to state 87
    register_specifier	go to state 88
    semantic	go to state 89
    type_info	go to state 336



state 276

    register_specifier  ->  COLON REGISTER LEFT_PAREN . IDENTIFIER RIGHT_PAREN   (rule 256)

    IDENTIFIER	shift, and go to state 337



state 277

    annotation  ->  LEFT_ANGLE annotation_list RIGHT_ANGLE .   (rule 228)

    $default	reduce using rule 228 (annotation)



state 278

    annotation_list  ->  annotation_list annotation_item .   (rule 230)

    $default	reduce using rule 230 (annotation_list)



state 279

    annotation_item  ->  ann_type IDENTIFIER . EQUAL ann_literal SEMICOLON   (rule 231)

    EQUAL	shift, and go to state 338



state 280

    type_info  ->  semantic register_specifier annotation .   (rule 265)

    $default	reduce using rule 265 (type_info)



state 281

    sampler_initializer  ->  SAMPLERSTATE . LEFT_BRACE sampler_init_list RIGHT_BRACE   (rule 266)
    sampler_initializer  ->  SAMPLERSTATE . LEFT_BRACE RIGHT_BRACE   (rule 267)

    LEFT_BRACE	shift, and go to state 339



state 282

    initialization_list  ->  LEFT_BRACE . initializer_list RIGHT_BRACE   (rule 221)
    initialization_list  ->  LEFT_BRACE . initializer_list COMMA RIGHT_BRACE   (rule 222)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 340
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initialization_list	go to state 341
    initializer_list	go to state 342



state 283

    initializer  ->  assignment_expression .   (rule 169)

    $default	reduce using rule 169 (initializer)



state 284

    single_declaration  ->  fully_specified_type IDENTIFIER type_info EQUAL initializer .   (rule 120)

    $default	reduce using rule 120 (single_declaration)



state 285

    initializer  ->  initialization_list .   (rule 170)

    $default	reduce using rule 170 (initializer)



state 286

    initializer  ->  sampler_initializer .   (rule 171)

    $default	reduce using rule 171 (initializer)



state 287

    primary_expression  ->  LEFT_PAREN expression RIGHT_PAREN .   (rule 6)

    $default	reduce using rule 6 (primary_expression)



state 288

    unary_expression  ->  LEFT_PAREN type_specifier_nonarray RIGHT_PAREN . unary_expression   (rule 31)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 343
    unary_operator	go to state 114
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 289

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression . RIGHT_BRACKET   (rule 8)

    RIGHT_BRACKET	shift, and go to state 344



state 290

    integer_expression  ->  expression .   (rule 13)
    expression  ->  expression . COMMA assignment_expression   (rule 82)

    COMMA	shift, and go to state 264

    $default	reduce using rule 13 (integer_expression)



state 291

    function_identifier  ->  IDENTIFIER .   (rule 25)

    $default	reduce using rule 25 (function_identifier)



state 292

    postfix_expression  ->  postfix_expression DOT FIELD_SELECTION .   (rule 10)
    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    LEFT_PAREN	reduce using rule 26 (function_identifier)
    $default	reduce using rule 10 (postfix_expression)



state 293

    function_call_or_method  ->  postfix_expression DOT function_call_generic .   (rule 16)

    $default	reduce using rule 16 (function_call_or_method)



state 294

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA assignment_expression .   (rule 22)

    $default	reduce using rule 22 (function_call_header_with_parameters)



state 295

    multiplicative_expression  ->  multiplicative_expression STAR unary_expression .   (rule 37)

    $default	reduce using rule 37 (multiplicative_expression)



state 296

    multiplicative_expression  ->  multiplicative_expression SLASH unary_expression .   (rule 38)

    $default	reduce using rule 38 (multiplicative_expression)



state 297

    multiplicative_expression  ->  multiplicative_expression PERCENT unary_expression .   (rule 39)

    $default	reduce using rule 39 (multiplicative_expression)



state 298

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 39)
    additive_expression  ->  additive_expression DASH multiplicative_expression .   (rule 42)

    STAR	shift, and go to state 212
    SLASH	shift, and go to state 213
    PERCENT	shift, and go to state 214

    $default	reduce using rule 42 (additive_expression)



state 299

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 39)
    additive_expression  ->  additive_expression PLUS multiplicative_expression .   (rule 41)

    STAR	shift, and go to state 212
    SLASH	shift, and go to state 213
    PERCENT	shift, and go to state 214

    $default	reduce using rule 41 (additive_expression)



state 300

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 44)

    DASH	shift, and go to state 215
    PLUS	shift, and go to state 216

    $default	reduce using rule 44 (shift_expression)



state 301

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 45)

    DASH	shift, and go to state 215
    PLUS	shift, and go to state 216

    $default	reduce using rule 45 (shift_expression)



state 302

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 49)

    LEFT_OP	shift, and go to state 217
    RIGHT_OP	shift, and go to state 218

    $default	reduce using rule 49 (relational_expression)



state 303

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 50)

    LEFT_OP	shift, and go to state 217
    RIGHT_OP	shift, and go to state 218

    $default	reduce using rule 50 (relational_expression)



state 304

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression LEFT_ANGLE shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 217
    RIGHT_OP	shift, and go to state 218

    $default	reduce using rule 47 (relational_expression)



state 305

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression RIGHT_ANGLE shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 217
    RIGHT_OP	shift, and go to state 218

    $default	reduce using rule 48 (relational_expression)



state 306

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 52)

    LE_OP	shift, and go to state 219
    GE_OP	shift, and go to state 220
    LEFT_ANGLE	shift, and go to state 221
    RIGHT_ANGLE	shift, and go to state 222

    $default	reduce using rule 52 (equality_expression)



state 307

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 53)

    LE_OP	shift, and go to state 219
    GE_OP	shift, and go to state 220
    LEFT_ANGLE	shift, and go to state 221
    RIGHT_ANGLE	shift, and go to state 222

    $default	reduce using rule 53 (equality_expression)



state 308

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  and_expression AMPERSAND equality_expression .   (rule 55)

    EQ_OP	shift, and go to state 223
    NE_OP	shift, and go to state 224

    $default	reduce using rule 55 (and_expression)



state 309

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 55)
    exclusive_or_expression  ->  exclusive_or_expression CARET and_expression .   (rule 57)

    AMPERSAND	shift, and go to state 225

    $default	reduce using rule 57 (exclusive_or_expression)



state 310

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 57)
    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR exclusive_or_expression .   (rule 59)

    CARET	shift, and go to state 226

    $default	reduce using rule 59 (inclusive_or_expression)



state 311

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 59)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 61)

    VERTICAL_BAR	shift, and go to state 227

    $default	reduce using rule 61 (logical_and_expression)



state 312

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_xor_expression  ->  logical_xor_expression XOR_OP logical_and_expression .   (rule 63)

    AND_OP	shift, and go to state 228

    $default	reduce using rule 63 (logical_xor_expression)



state 313

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 63)
    logical_or_expression  ->  logical_or_expression OR_OP logical_xor_expression .   (rule 65)

    XOR_OP	shift, and go to state 229

    $default	reduce using rule 65 (logical_or_expression)



state 314

    conditional_expression  ->  logical_or_expression QUESTION expression . COLON assignment_expression   (rule 67)
    expression  ->  expression . COMMA assignment_expression   (rule 82)

    COMMA	shift, and go to state 264
    COLON	shift, and go to state 345



state 315

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 167)
    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET COLON IDENTIFIER   (rule 168)

    RIGHT_BRACKET	shift, and go to state 346



state 316

    struct_declarator  ->  IDENTIFIER COLON IDENTIFIER .   (rule 166)

    $default	reduce using rule 166 (struct_declarator)



state 317

    struct_declarator_list  ->  struct_declarator_list COMMA struct_declarator .   (rule 164)

    $default	reduce using rule 164 (struct_declarator_list)



state 318

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE .   (rule 135)

    $default	reduce using rule 135 (type_specifier_nonarray)



state 319

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE .   (rule 133)

    $default	reduce using rule 133 (type_specifier_nonarray)



state 320

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE .   (rule 134)

    $default	reduce using rule 134 (type_specifier_nonarray)



state 321

    iteration_statement  ->  DO @4 statement . WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 200)

    WHILE	shift, and go to state 347



state 322

    iteration_statement  ->  FOR LEFT_PAREN @5 . for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 202)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 348
    expression_statement	go to state 349
    for_init_statement	go to state 350



state 323

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    selection_statement  ->  IF LEFT_PAREN expression . RIGHT_PAREN selection_rest_statement   (rule 192)

    RIGHT_PAREN	shift, and go to state 351
    COMMA	shift, and go to state 264



state 324

    jump_statement  ->  RETURN expression SEMICOLON .   (rule 212)

    $default	reduce using rule 212 (jump_statement)



state 325

    iteration_statement  ->  WHILE LEFT_PAREN @3 . condition RIGHT_PAREN statement_no_new_scope   (rule 198)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 352
    fully_specified_type	go to state 353
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    condition	go to state 354



state 326

    compound_statement  ->  LEFT_BRACE @1 statement_list . @2 RIGHT_BRACE   (rule 183)
    statement_list  ->  statement_list . statement   (rule 189)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 146
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    $default	reduce using rule 182 (@2)

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    statement	go to state 267
    simple_statement	go to state 158
    compound_statement	go to state 159
    @2  	go to state 355
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 327

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 69)

    $default	reduce using rule 69 (assignment_expression)



state 328

    expression  ->  expression COMMA assignment_expression .   (rule 82)

    $default	reduce using rule 82 (expression)



state 329

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 96)
    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET COLON IDENTIFIER   (rule 97)

    RIGHT_BRACKET	shift, and go to state 356



state 330

    parameter_declarator  ->  type_specifier IDENTIFIER COLON IDENTIFIER .   (rule 95)

    $default	reduce using rule 95 (parameter_declarator)



state 331

    parameter_declarator  ->  type_specifier IDENTIFIER EQUAL initializer .   (rule 94)

    $default	reduce using rule 94 (parameter_declarator)



state 332

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info .   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info . EQUAL initializer   (rule 111)

    EQUAL	shift, and go to state 357

    $default	reduce using rule 109 (init_declarator_list)



state 333

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info EQUAL initializer   (rule 112)

    COLON	shift, and go to state 85
    LEFT_ANGLE	shift, and go to state 86

    $default	reduce using rule 258 (type_info)

    annotation	go to state 87
    register_specifier	go to state 88
    semantic	go to state 89
    type_info	go to state 358



state 334

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info EQUAL initializer .   (rule 113)

    $default	reduce using rule 113 (init_declarator_list)



state 335

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL . initializer   (rule 118)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 359
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 336

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info .   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info . EQUAL initializer   (rule 119)

    EQUAL	shift, and go to state 360

    $default	reduce using rule 117 (single_declaration)



state 337

    register_specifier  ->  COLON REGISTER LEFT_PAREN IDENTIFIER . RIGHT_PAREN   (rule 256)

    RIGHT_PAREN	shift, and go to state 361



state 338

    annotation_item  ->  ann_type IDENTIFIER EQUAL . ann_literal SEMICOLON   (rule 231)

    BOOL_TYPE	shift, and go to state 175
    FLOAT_TYPE	shift, and go to state 176
    INT_TYPE	shift, and go to state 177
    STRING_TYPE	shift, and go to state 178
    BVEC2	shift, and go to state 179
    BVEC3	shift, and go to state 180
    BVEC4	shift, and go to state 181
    IVEC2	shift, and go to state 182
    IVEC3	shift, and go to state 183
    IVEC4	shift, and go to state 184
    VEC2	shift, and go to state 185
    VEC3	shift, and go to state 186
    VEC4	shift, and go to state 187
    FLOATCONSTANT	shift, and go to state 362
    INTCONSTANT	shift, and go to state 363
    BOOLCONSTANT	shift, and go to state 364
    STRINGCONSTANT	shift, and go to state 365
    LEFT_BRACE	shift, and go to state 366

    ann_type	go to state 367
    ann_literal	go to state 368
    ann_numerical_constant	go to state 369
    ann_literal_constructor	go to state 370
    ann_literal_init_list	go to state 371



state 339

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE . sampler_init_list RIGHT_BRACE   (rule 266)
    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE . RIGHT_BRACE   (rule 267)

    TEXTURE	shift, and go to state 372
    IDENTIFIER	shift, and go to state 373
    RIGHT_BRACE	shift, and go to state 374

    sampler_init_list	go to state 375
    sampler_init_item	go to state 376



state 340

    initializer_list  ->  assignment_expression .   (rule 223)

    $default	reduce using rule 223 (initializer_list)



state 341

    initializer_list  ->  initialization_list .   (rule 224)

    $default	reduce using rule 224 (initializer_list)



state 342

    initialization_list  ->  LEFT_BRACE initializer_list . RIGHT_BRACE   (rule 221)
    initialization_list  ->  LEFT_BRACE initializer_list . COMMA RIGHT_BRACE   (rule 222)
    initializer_list  ->  initializer_list . COMMA assignment_expression   (rule 225)
    initializer_list  ->  initializer_list . COMMA initialization_list   (rule 226)

    RIGHT_BRACE	shift, and go to state 377
    COMMA	shift, and go to state 378



state 343

    unary_expression  ->  LEFT_PAREN type_specifier_nonarray RIGHT_PAREN unary_expression .   (rule 31)

    $default	reduce using rule 31 (unary_expression)



state 344

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 345

    conditional_expression  ->  logical_or_expression QUESTION expression COLON . assignment_expression   (rule 67)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 379
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 346

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 167)
    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . COLON IDENTIFIER   (rule 168)

    COLON	shift, and go to state 380

    $default	reduce using rule 167 (struct_declarator)



state 347

    iteration_statement  ->  DO @4 statement WHILE . LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 200)

    LEFT_PAREN	shift, and go to state 381



state 348

    for_init_statement  ->  declaration_statement .   (rule 204)

    $default	reduce using rule 204 (for_init_statement)



state 349

    for_init_statement  ->  expression_statement .   (rule 203)

    $default	reduce using rule 203 (for_init_statement)



state 350

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement . for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 202)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    $default	reduce using rule 206 (conditionopt)

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 352
    fully_specified_type	go to state 353
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    condition	go to state 382
    conditionopt	go to state 383
    for_rest_statement	go to state 384



state 351

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN . selection_rest_statement   (rule 192)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 146
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    statement	go to state 385
    simple_statement	go to state 158
    compound_statement	go to state 159
    expression_statement	go to state 161
    selection_statement	go to state 162
    selection_rest_statement	go to state 386
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 352

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    condition  ->  expression .   (rule 195)

    COMMA	shift, and go to state 264

    $default	reduce using rule 195 (condition)



state 353

    condition  ->  fully_specified_type . IDENTIFIER EQUAL initializer   (rule 196)

    IDENTIFIER	shift, and go to state 387



state 354

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition . RIGHT_PAREN statement_no_new_scope   (rule 198)

    RIGHT_PAREN	shift, and go to state 388



state 355

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 . RIGHT_BRACE   (rule 183)

    RIGHT_BRACE	shift, and go to state 389



state 356

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 96)
    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . COLON IDENTIFIER   (rule 97)

    COLON	shift, and go to state 390

    $default	reduce using rule 96 (parameter_declarator)



state 357

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL . initializer   (rule 111)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 391
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 358

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info .   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info . EQUAL initializer   (rule 112)

    EQUAL	shift, and go to state 392

    $default	reduce using rule 110 (init_declarator_list)



state 359

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer .   (rule 118)

    $default	reduce using rule 118 (single_declaration)



state 360

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL . initializer   (rule 119)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 393
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 361

    register_specifier  ->  COLON REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN .   (rule 256)

    $default	reduce using rule 256 (register_specifier)



state 362

    ann_numerical_constant  ->  FLOATCONSTANT .   (rule 251)

    $default	reduce using rule 251 (ann_numerical_constant)



state 363

    ann_numerical_constant  ->  INTCONSTANT .   (rule 249)

    $default	reduce using rule 249 (ann_numerical_constant)



state 364

    ann_numerical_constant  ->  BOOLCONSTANT .   (rule 250)

    $default	reduce using rule 250 (ann_numerical_constant)



state 365

    ann_literal  ->  STRINGCONSTANT .   (rule 246)

    $default	reduce using rule 246 (ann_literal)



state 366

    ann_literal_init_list  ->  LEFT_BRACE . ann_value_list RIGHT_BRACE   (rule 255)

    FLOATCONSTANT	shift, and go to state 362
    INTCONSTANT	shift, and go to state 363
    BOOLCONSTANT	shift, and go to state 364

    ann_numerical_constant	go to state 394
    ann_value_list	go to state 395



state 367

    ann_literal_constructor  ->  ann_type . LEFT_PAREN ann_value_list RIGHT_PAREN   (rule 252)

    LEFT_PAREN	shift, and go to state 396



state 368

    annotation_item  ->  ann_type IDENTIFIER EQUAL ann_literal . SEMICOLON   (rule 231)

    SEMICOLON	shift, and go to state 397



state 369

    ann_literal  ->  ann_numerical_constant .   (rule 245)

    $default	reduce using rule 245 (ann_literal)



state 370

    ann_literal  ->  ann_literal_constructor .   (rule 247)

    $default	reduce using rule 247 (ann_literal)



state 371

    ann_literal  ->  ann_literal_init_list .   (rule 248)

    $default	reduce using rule 248 (ann_literal)



state 372

    sampler_init_item  ->  TEXTURE . EQUAL IDENTIFIER SEMICOLON   (rule 273)
    sampler_init_item  ->  TEXTURE . EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 274)
    sampler_init_item  ->  TEXTURE . EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 275)

    EQUAL	shift, and go to state 398



state 373

    sampler_init_item  ->  IDENTIFIER . EQUAL IDENTIFIER SEMICOLON   (rule 270)
    sampler_init_item  ->  IDENTIFIER . EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 271)
    sampler_init_item  ->  IDENTIFIER . EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 272)

    EQUAL	shift, and go to state 399



state 374

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE RIGHT_BRACE .   (rule 267)

    $default	reduce using rule 267 (sampler_initializer)



state 375

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE sampler_init_list . RIGHT_BRACE   (rule 266)
    sampler_init_list  ->  sampler_init_list . sampler_init_item   (rule 269)

    TEXTURE	shift, and go to state 372
    IDENTIFIER	shift, and go to state 373
    RIGHT_BRACE	shift, and go to state 400

    sampler_init_item	go to state 401



state 376

    sampler_init_list  ->  sampler_init_item .   (rule 268)

    $default	reduce using rule 268 (sampler_init_list)



state 377

    initialization_list  ->  LEFT_BRACE initializer_list RIGHT_BRACE .   (rule 221)

    $default	reduce using rule 221 (initialization_list)



state 378

    initialization_list  ->  LEFT_BRACE initializer_list COMMA . RIGHT_BRACE   (rule 222)
    initializer_list  ->  initializer_list COMMA . assignment_expression   (rule 225)
    initializer_list  ->  initializer_list COMMA . initialization_list   (rule 226)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    RIGHT_BRACE	shift, and go to state 402
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 403
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initialization_list	go to state 404



state 379

    conditional_expression  ->  logical_or_expression QUESTION expression COLON assignment_expression .   (rule 67)

    $default	reduce using rule 67 (conditional_expression)



state 380

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON . IDENTIFIER   (rule 168)

    IDENTIFIER	shift, and go to state 405



state 381

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN . expression RIGHT_PAREN SEMICOLON   (rule 200)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 406
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 382

    conditionopt  ->  condition .   (rule 205)

    $default	reduce using rule 205 (conditionopt)



state 383

    for_rest_statement  ->  conditionopt . SEMICOLON   (rule 207)
    for_rest_statement  ->  conditionopt . SEMICOLON expression   (rule 208)

    SEMICOLON	shift, and go to state 407



state 384

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement . RIGHT_PAREN statement_no_new_scope   (rule 202)

    RIGHT_PAREN	shift, and go to state 408



state 385

    selection_rest_statement  ->  statement . ELSE statement   (rule 193)
    selection_rest_statement  ->  statement .   (rule 194)

    ELSE	shift, and go to state 409

    ELSE	[reduce using rule 194 (selection_rest_statement)]
    $default	reduce using rule 194 (selection_rest_statement)



state 386

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement .   (rule 192)

    $default	reduce using rule 192 (selection_statement)



state 387

    condition  ->  fully_specified_type IDENTIFIER . EQUAL initializer   (rule 196)

    EQUAL	shift, and go to state 410



state 388

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN . statement_no_new_scope   (rule 198)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 74
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    simple_statement	go to state 411
    statement_no_new_scope	go to state 412
    compound_statement_no_new_scope	go to state 413
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 389

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 RIGHT_BRACE .   (rule 183)

    $default	reduce using rule 183 (compound_statement)



state 390

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON . IDENTIFIER   (rule 97)

    IDENTIFIER	shift, and go to state 414



state 391

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer .   (rule 111)

    $default	reduce using rule 111 (init_declarator_list)



state 392

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL . initializer   (rule 112)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 415
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 393

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer .   (rule 119)

    $default	reduce using rule 119 (single_declaration)



state 394

    ann_value_list  ->  ann_numerical_constant .   (rule 253)

    $default	reduce using rule 253 (ann_value_list)



state 395

    ann_value_list  ->  ann_value_list . COMMA ann_numerical_constant   (rule 254)
    ann_literal_init_list  ->  LEFT_BRACE ann_value_list . RIGHT_BRACE   (rule 255)

    RIGHT_BRACE	shift, and go to state 416
    COMMA	shift, and go to state 417



state 396

    ann_literal_constructor  ->  ann_type LEFT_PAREN . ann_value_list RIGHT_PAREN   (rule 252)

    FLOATCONSTANT	shift, and go to state 362
    INTCONSTANT	shift, and go to state 363
    BOOLCONSTANT	shift, and go to state 364

    ann_numerical_constant	go to state 394
    ann_value_list	go to state 418



state 397

    annotation_item  ->  ann_type IDENTIFIER EQUAL ann_literal SEMICOLON .   (rule 231)

    $default	reduce using rule 231 (annotation_item)



state 398

    sampler_init_item  ->  TEXTURE EQUAL . IDENTIFIER SEMICOLON   (rule 273)
    sampler_init_item  ->  TEXTURE EQUAL . LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 274)
    sampler_init_item  ->  TEXTURE EQUAL . LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 275)

    IDENTIFIER	shift, and go to state 419
    LEFT_PAREN	shift, and go to state 420
    LEFT_ANGLE	shift, and go to state 421



state 399

    sampler_init_item  ->  IDENTIFIER EQUAL . IDENTIFIER SEMICOLON   (rule 270)
    sampler_init_item  ->  IDENTIFIER EQUAL . LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 271)
    sampler_init_item  ->  IDENTIFIER EQUAL . LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 272)

    IDENTIFIER	shift, and go to state 422
    LEFT_PAREN	shift, and go to state 423
    LEFT_ANGLE	shift, and go to state 424



state 400

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE sampler_init_list RIGHT_BRACE .   (rule 266)

    $default	reduce using rule 266 (sampler_initializer)



state 401

    sampler_init_list  ->  sampler_init_list sampler_init_item .   (rule 269)

    $default	reduce using rule 269 (sampler_init_list)



state 402

    initialization_list  ->  LEFT_BRACE initializer_list COMMA RIGHT_BRACE .   (rule 222)

    $default	reduce using rule 222 (initialization_list)



state 403

    initializer_list  ->  initializer_list COMMA assignment_expression .   (rule 225)

    $default	reduce using rule 225 (initializer_list)



state 404

    initializer_list  ->  initializer_list COMMA initialization_list .   (rule 226)

    $default	reduce using rule 226 (initializer_list)



state 405

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER .   (rule 168)

    $default	reduce using rule 168 (struct_declarator)



state 406

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression . RIGHT_PAREN SEMICOLON   (rule 200)

    RIGHT_PAREN	shift, and go to state 425
    COMMA	shift, and go to state 264



state 407

    for_rest_statement  ->  conditionopt SEMICOLON .   (rule 207)
    for_rest_statement  ->  conditionopt SEMICOLON . expression   (rule 208)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    $default	reduce using rule 207 (for_rest_statement)

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 426
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44



state 408

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN . statement_no_new_scope   (rule 202)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 74
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    simple_statement	go to state 411
    statement_no_new_scope	go to state 427
    compound_statement_no_new_scope	go to state 413
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 409

    selection_rest_statement  ->  statement ELSE . statement   (rule 193)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 138
    CONTINUE	shift, and go to state 139
    DO  	shift, and go to state 140
    FOR 	shift, and go to state 141
    IF  	shift, and go to state 142
    DISCARD	shift, and go to state 143
    RETURN	shift, and go to state 144
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 145
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 146
    SEMICOLON	shift, and go to state 148
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 151
    expression	go to state 152
    declaration	go to state 153
    function_prototype	go to state 154
    function_declarator	go to state 35
    function_header_with_parameters	go to state 36
    function_header	go to state 37
    init_declarator_list	go to state 38
    single_declaration	go to state 39
    fully_specified_type	go to state 40
    type_qualifier	go to state 41
    type_specifier	go to state 155
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    declaration_statement	go to state 156
    statement	go to state 428
    simple_statement	go to state 158
    compound_statement	go to state 159
    expression_statement	go to state 161
    selection_statement	go to state 162
    iteration_statement	go to state 163
    jump_statement	go to state 164



state 410

    condition  ->  fully_specified_type IDENTIFIER EQUAL . initializer   (rule 196)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERGENERIC	shift, and go to state 28
    VECTOR	shift, and go to state 29
    TEXTURE	shift, and go to state 30
    SAMPLERSTATE	shift, and go to state 281
    IDENTIFIER	shift, and go to state 91
    TYPE_NAME	shift, and go to state 31
    FLOATCONSTANT	shift, and go to state 92
    INTCONSTANT	shift, and go to state 93
    BOOLCONSTANT	shift, and go to state 94
    FIELD_SELECTION	shift, and go to state 95
    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97
    LEFT_PAREN	shift, and go to state 98
    LEFT_BRACE	shift, and go to state 282
    BANG	shift, and go to state 99
    DASH	shift, and go to state 100
    TILDE	shift, and go to state 101
    PLUS	shift, and go to state 102

    variable_identifier	go to state 103
    primary_expression	go to state 104
    postfix_expression	go to state 105
    function_call	go to state 106
    function_call_or_method	go to state 107
    function_call_generic	go to state 108
    function_call_header_no_parameters	go to state 109
    function_call_header_with_parameters	go to state 110
    function_call_header	go to state 111
    function_identifier	go to state 112
    unary_expression	go to state 149
    unary_operator	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_xor_expression	go to state 124
    logical_or_expression	go to state 125
    conditional_expression	go to state 150
    assignment_expression	go to state 283
    type_specifier	go to state 128
    type_specifier_nonarray	go to state 43
    struct_specifier	go to state 44
    initializer	go to state 429
    initialization_list	go to state 285
    sampler_initializer	go to state 286



state 411

    statement_no_new_scope  ->  simple_statement .   (rule 185)

    $default	reduce using rule 185 (statement_no_new_scope)



state 412

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope .   (rule 198)

    $default	reduce using rule 198 (iteration_statement)



state 413

    statement_no_new_scope  ->  compound_statement_no_new_scope .   (rule 184)

    $default	reduce using rule 184 (statement_no_new_scope)



state 414

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER .   (rule 97)

    $default	reduce using rule 97 (parameter_declarator)



state 415

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer .   (rule 112)

    $default	reduce using rule 112 (init_declarator_list)



state 416

    ann_literal_init_list  ->  LEFT_BRACE ann_value_list RIGHT_BRACE .   (rule 255)

    $default	reduce using rule 255 (ann_literal_init_list)



state 417

    ann_value_list  ->  ann_value_list COMMA . ann_numerical_constant   (rule 254)

    FLOATCONSTANT	shift, and go to state 362
    INTCONSTANT	shift, and go to state 363
    BOOLCONSTANT	shift, and go to state 364

    ann_numerical_constant	go to state 430



state 418

    ann_literal_constructor  ->  ann_type LEFT_PAREN ann_value_list . RIGHT_PAREN   (rule 252)
    ann_value_list  ->  ann_value_list . COMMA ann_numerical_constant   (rule 254)

    RIGHT_PAREN	shift, and go to state 431
    COMMA	shift, and go to state 417



state 419

    sampler_init_item  ->  TEXTURE EQUAL IDENTIFIER . SEMICOLON   (rule 273)

    SEMICOLON	shift, and go to state 432



state 420

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN . IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 275)

    IDENTIFIER	shift, and go to state 433



state 421

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE . IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 274)

    IDENTIFIER	shift, and go to state 434



state 422

    sampler_init_item  ->  IDENTIFIER EQUAL IDENTIFIER . SEMICOLON   (rule 270)

    SEMICOLON	shift, and go to state 435



state 423

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN . IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 272)

    IDENTIFIER	shift, and go to state 436



state 424

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE . IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 271)

    IDENTIFIER	shift, and go to state 437



state 425

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN . SEMICOLON   (rule 200)

    SEMICOLON	shift, and go to state 438



state 426

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    for_rest_statement  ->  conditionopt SEMICOLON expression .   (rule 208)

    COMMA	shift, and go to state 264

    $default	reduce using rule 208 (for_rest_statement)



state 427

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope .   (rule 202)

    $default	reduce using rule 202 (iteration_statement)



state 428

    selection_rest_statement  ->  statement ELSE statement .   (rule 193)

    $default	reduce using rule 193 (selection_rest_statement)



state 429

    condition  ->  fully_specified_type IDENTIFIER EQUAL initializer .   (rule 196)

    $default	reduce using rule 196 (condition)



state 430

    ann_value_list  ->  ann_value_list COMMA ann_numerical_constant .   (rule 254)

    $default	reduce using rule 254 (ann_value_list)



state 431

    ann_literal_constructor  ->  ann_type LEFT_PAREN ann_value_list RIGHT_PAREN .   (rule 252)

    $default	reduce using rule 252 (ann_literal_constructor)



state 432

    sampler_init_item  ->  TEXTURE EQUAL IDENTIFIER SEMICOLON .   (rule 273)

    $default	reduce using rule 273 (sampler_init_item)



state 433

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN IDENTIFIER . RIGHT_PAREN SEMICOLON   (rule 275)

    RIGHT_PAREN	shift, and go to state 439



state 434

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE IDENTIFIER . RIGHT_ANGLE SEMICOLON   (rule 274)

    RIGHT_ANGLE	shift, and go to state 440



state 435

    sampler_init_item  ->  IDENTIFIER EQUAL IDENTIFIER SEMICOLON .   (rule 270)

    $default	reduce using rule 270 (sampler_init_item)



state 436

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER . RIGHT_PAREN SEMICOLON   (rule 272)

    RIGHT_PAREN	shift, and go to state 441



state 437

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER . RIGHT_ANGLE SEMICOLON   (rule 271)

    RIGHT_ANGLE	shift, and go to state 442



state 438

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON .   (rule 200)

    $default	reduce using rule 200 (iteration_statement)



state 439

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN . SEMICOLON   (rule 275)

    SEMICOLON	shift, and go to state 443



state 440

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE . SEMICOLON   (rule 274)

    SEMICOLON	shift, and go to state 444



state 441

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN . SEMICOLON   (rule 272)

    SEMICOLON	shift, and go to state 445



state 442

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE . SEMICOLON   (rule 271)

    SEMICOLON	shift, and go to state 446



state 443

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON .   (rule 275)

    $default	reduce using rule 275 (sampler_init_item)



state 444

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON .   (rule 274)

    $default	reduce using rule 274 (sampler_init_item)



state 445

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON .   (rule 272)

    $default	reduce using rule 272 (sampler_init_item)



state 446

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON .   (rule 271)

    $default	reduce using rule 271 (sampler_init_item)



state 447

    $   	go to state 448



state 448

    $default	accept
